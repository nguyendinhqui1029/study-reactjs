{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\DeliveryAddress\\\\DeliveryAddress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../../component/Input/Input\";\nimport SelectedInput from \"../../component/SelectedInput/SelectedInput\";\nimport { Formik, Form, FastField, Field } from \"formik\";\nimport Yup from \"../../validation/CustomValidation\";\nimport \"./DeliveryAddress.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDeliveryAddress.propTypes = {};\nDeliveryAddress.defaultProps = {};\n\nfunction DeliveryAddress(props) {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [districtsByCity, setDistrictsByCity] = useState([]);\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    city: \"\",\n    district: \"\"\n  };\n\n  const fetchCities = async () => {\n    try {\n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      };\n      const urlRequest = \"./json/cities.json\";\n      const response = await fetch(urlRequest, header);\n      const responseJson = await response.json();\n      const responseJsonMap = responseJson.map(item => {\n        return {\n          value: item.id,\n          label: item.label\n        };\n      });\n      setCities(responseJsonMap);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCities();\n  }, []);\n\n  async function fetchDistricts() {\n    try {\n      const districtsList = [];\n      const districtsSubAddress = [];\n\n      if (!districts.length) {\n        const header = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        };\n        const urlRequest = \"./json/districts.json\";\n        const response = await fetch(urlRequest, header);\n        const responseJson = await response.json();\n        const responseJsonMap = responseJson.map(item => {\n          return {\n            districts: item.district.map(item => {\n              return {\n                value: item.alias,\n                label: item.label\n              };\n            }),\n            idCity: item.idCity\n          };\n        });\n        setDistricts(responseJsonMap);\n        responseJsonMap.forEach(district => {\n          district.idCity === selectedCity && districtsList.push(district.districts);\n          district.idCity === selectedCitySubAddress && districtsSubAddress.push(district.districts);\n        });\n        setDistrictsByCity([...districtsList]);\n        setDistrictsByCitySubAddress([...districtsSubAddress]);\n      } else {\n        districts.forEach(district => {\n          district.idCity === selectedCity && districtsList.push(district.districts);\n          district.idCity === selectedCitySubAddress && districtsSubAddress.push(district.districts);\n        });\n        setDistrictsByCity([...districtsList]);\n        setDistrictsByCitySubAddress([...districtsSubAddress]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchDistricts();\n  }, [selectedCity, selectedCitySubAddress]);\n\n  function changeOtherAddress(event) {\n    setShowOtherAddress(event.target.checked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeliveryAddress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HeaderContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"1. \\u0110\\u1ECAA CH\\u1EC8 THANH TO\\xC1N V\\xC0 GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN THANH TO\\xC1N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContainerLink\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"link123\",\n          className: \"RegisterLink\",\n          children: \"\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n mua h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"link124\",\n          className: \"LoginLink\",\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MainInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Mua h\\xE0ng kh\\xF4ng c\\u1EA7n t\\xE0i kho\\u1EA3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          render: formik => {\n            return /*#__PURE__*/_jsxDEV(Form, {\n              className: \"FormInfo\",\n              children: [/*#__PURE__*/_jsxDEV(FastField, {\n                name: \"name\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"email\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"address\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"city\",\n                component: SelectedInput,\n                dataSource: cities\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"district\",\n                component: SelectedInput,\n                dataSource: districtsByCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: \"\",\n                onChange: () => {},\n                placeholder: \"Ghi ch\\xFA \\u0111\\u01A1n h\\xE0ng\",\n                rows: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SubInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"otherAddress\",\n            placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\",\n            onChange: event => changeOtherAddress(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Giao h\\xE0ng \\u0111\\u1ECBa ch\\u1EC9 kh\\xE1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          render: formik => {\n            return /*#__PURE__*/_jsxDEV(Form, {\n              className: isShowOtherAddress ? \"FormInfo\" : \"SubForm\",\n              children: [/*#__PURE__*/_jsxDEV(FastField, {\n                name: \"nameSubAddress\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"emailSubAddress\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"addressSubAddress\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"citySubAddress\",\n                component: SelectedInput,\n                dataSource: cities,\n                placeHolder: \"Vui l\\xF2ng ch\\u1ECDn th\\xE0nh ph\\u1ED1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"districtSubAddress\",\n                component: SelectedInput,\n                dataSource: districtsByCitySubAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeliveryAddress, \"+ngCmiG9+nJvZRLSj66/otU9OS8=\");\n\n_c = DeliveryAddress;\nexport default DeliveryAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryAddress\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/DeliveryAddress/DeliveryAddress.jsx"],"names":["React","useEffect","useState","PropTypes","Link","Input","SelectedInput","Formik","Form","FastField","Field","Yup","DeliveryAddress","propTypes","defaultProps","props","cities","setCities","districts","setDistricts","districtsByCity","setDistrictsByCity","districtsByCitySubAddress","setDistrictsByCitySubAddress","selectedCity","setSelectedCity","selectedCitySubAddress","setSelectedCitySubAddress","isShowOtherAddress","setShowOtherAddress","initialValues","name","email","address","city","district","fetchCities","header","headers","Accept","urlRequest","response","fetch","responseJson","json","responseJsonMap","map","item","value","id","label","error","console","log","fetchDistricts","districtsList","districtsSubAddress","length","alias","idCity","forEach","push","changeOtherAddress","event","target","checked","formik"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../../component/Input/Input\";\r\nimport SelectedInput from \"../../component/SelectedInput/SelectedInput\";\r\nimport { Formik, Form, FastField, Field } from \"formik\";\r\nimport Yup from \"../../validation/CustomValidation\";\r\nimport \"./DeliveryAddress.scss\";\r\nDeliveryAddress.propTypes = {};\r\nDeliveryAddress.defaultProps = {};\r\n\r\nfunction DeliveryAddress(props) {\r\n  const [cities, setCities] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [districtsByCity, setDistrictsByCity] = useState([]);\r\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState(\r\n    []\r\n  );\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\r\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    district: \"\",\r\n  };\r\n  const fetchCities = async () => {\r\n    try {\r\n      const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      };\r\n      const urlRequest = \"./json/cities.json\";\r\n      const response = await fetch(urlRequest, header);\r\n      const responseJson = await response.json();\r\n      const responseJsonMap = responseJson.map((item) => {\r\n        return {\r\n          value: item.id,\r\n          label: item.label,\r\n        };\r\n      });\r\n      setCities(responseJsonMap);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, []);\r\n\r\n   async function fetchDistricts() {\r\n     try {\r\n       const districtsList = [];\r\n       const districtsSubAddress = [];\r\n       if (!districts.length) {\r\n         const header = {\r\n           headers: {\r\n             \"Content-Type\": \"application/json\",\r\n             Accept: \"application/json\",\r\n           },\r\n         };\r\n         const urlRequest = \"./json/districts.json\";\r\n         const response = await fetch(urlRequest, header);\r\n         const responseJson = await response.json();\r\n         const responseJsonMap = responseJson.map((item) => {\r\n           return {\r\n             districts: item.district.map((item) => {\r\n               return { value: item.alias, label: item.label };\r\n             }),\r\n             idCity: item.idCity,\r\n           };\r\n         });\r\n         setDistricts(responseJsonMap);\r\n         responseJsonMap.forEach((district) => {\r\n           district.idCity === selectedCity &&\r\n             districtsList.push(district.districts);\r\n           district.idCity === selectedCitySubAddress &&\r\n             districtsSubAddress.push(district.districts);\r\n         });\r\n\r\n         setDistrictsByCity([...districtsList]);\r\n         setDistrictsByCitySubAddress([...districtsSubAddress]);\r\n       } else {\r\n         districts.forEach((district) => {\r\n           district.idCity === selectedCity &&\r\n             districtsList.push(district.districts);\r\n           district.idCity === selectedCitySubAddress &&\r\n             districtsSubAddress.push(district.districts);\r\n         });\r\n         setDistrictsByCity([...districtsList]);\r\n         setDistrictsByCitySubAddress([...districtsSubAddress]);\r\n       }\r\n     } catch (error) {\r\n       console.log(error);\r\n     }\r\n   }\r\n  useEffect(() => {\r\n    fetchDistricts();\r\n  }, [selectedCity, selectedCitySubAddress]);\r\n\r\n  function changeOtherAddress(event) {\r\n    setShowOtherAddress(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <div className=\"DeliveryAddress\">\r\n      <div className=\"HeaderContainer\">\r\n        <h3 className=\"HeaderContent\">1. ĐỊA CHỈ THANH TOÁN VÀ GIAO HÀNG</h3>\r\n      </div>\r\n      <div className=\"ContentContainer\">\r\n        <h3 className=\"HeaderContent\">THÔNG TIN THANH TOÁN</h3>\r\n        <div className=\"ContainerLink\">\r\n          <Link to=\"link123\" className=\"RegisterLink\">\r\n            Đăng ký tài khoản mua hàng\r\n          </Link>\r\n          <span>|</span>\r\n          <Link to=\"link124\" className=\"LoginLink\">\r\n            Đăng nhập\r\n          </Link>\r\n        </div>\r\n        <div className=\"MainInfo\">\r\n          <h5>Mua hàng không cần tài khoản</h5>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            render={(formik) => {\r\n              return (\r\n                <Form className=\"FormInfo\">\r\n                  <FastField\r\n                    name=\"name\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Họ và Tên\"\r\n                  />\r\n                  <FastField\r\n                    name=\"email\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FastField\r\n                    name=\"address\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Địa chỉ\"\r\n                  />\r\n                  <Field\r\n                    name=\"city\"\r\n                    component={SelectedInput}\r\n                    dataSource={cities}\r\n                  />\r\n                  \r\n                  <Field\r\n                    name=\"district\"\r\n                    component={SelectedInput}\r\n                    dataSource={districtsByCity}\r\n                  />\r\n                    \r\n                  <textarea\r\n                    value=\"\"\r\n                    onChange={() => {}}\r\n                    placeholder=\"Ghi chú đơn hàng\"\r\n                    rows=\"5\"\r\n                  />\r\n                </Form>\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        <h3 className=\"HeaderContent\">THÔNG TIN GIAO HÀNG</h3>\r\n        <div className=\"SubInfo\">\r\n          <span>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"otherAddress\"\r\n              placeholder=\"Họ và Tên\"\r\n              onChange={(event) => changeOtherAddress(event)}\r\n            />\r\n            <span>Giao hàng địa chỉ khác</span>\r\n          </span>\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            render={(formik) => {\r\n              return (\r\n                <Form className={isShowOtherAddress ? \"FormInfo\" : \"SubForm\"}>\r\n                  <FastField\r\n                    name=\"nameSubAddress\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Họ và Tên\"\r\n                  />\r\n                  <FastField\r\n                    name=\"emailSubAddress\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FastField\r\n                    name=\"addressSubAddress\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Địa chỉ\"\r\n                  />\r\n                  <Field\r\n                    name=\"citySubAddress\"\r\n                    component={SelectedInput}\r\n                    dataSource={cities}\r\n                    placeHolder=\"Vui lòng chọn thành phố\"\r\n                  />\r\n                  <FastField\r\n                    name=\"districtSubAddress\"\r\n                    component={SelectedInput}\r\n                    dataSource={districtsByCitySubAddress}\r\n                  />\r\n                </Form>\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryAddress;\r\n"]},"metadata":{},"sourceType":"module"}