{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\Payment\\\\Payment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport DeliveryAddress from \"../../component/DeliveryAddress/DeliveryAddress\";\nimport PayInfo from \"../../component/PayInfo/PayInfo\";\nimport OrderInfo from \"../../component/OrderInfo/OrderInfo\";\nimport \"./Payment.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { calculateIntoMoney, calculateTotal } from \"../../util/util\";\nimport { addDeliveryMethod, addPaymentMethod, setID, setStatus } from \"../../actions/cart\";\nimport orderDetailApi from \"../../api/orderDetail\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormikContext } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [paymentMethod, setPaymentMethod] = useState([]);\n  const [deliveryMethod, setDeliveryMethod] = useState([]);\n  const [deliveryFee, setDeliveryFee] = useState(0);\n  const history = useHistory();\n  let cartList = useSelector(carts => carts.cart.cartList);\n  let cartDetail = useSelector(carts => carts.cart);\n  const disPatch = useDispatch();\n  cartList = calculateIntoMoney(cartList);\n  const formRefAdrress = useRef(null);\n  const formRefOther = useRef(null);\n  useEffect(() => {\n    setPaymentMethod(payMethod);\n    setDeliveryMethod(deliveryMethod);\n  }, [payMethod, deliveryMethod]);\n\n  const changeDeliveryMethod = item => {\n    disPatch(addDeliveryMethod(item));\n    setDeliveryFee(item.fee);\n  };\n\n  const changePayMethod = item => {\n    disPatch(addPaymentMethod(item));\n  };\n\n  const handleClickOrder = () => {\n    console.log(\"test11\", formRefAdrress);\n    formRefAdrress.current.submitForm();\n    formRefOther.current.submitForm(); // orderDetailApi.addOrderDetail(cartDetail).then((result) => {\n    //   disPatch(setID(result.id));\n    //   disPatch(setStatus(\"Waiting Approval\"));\n    //   history.push(\"/cart-detail/completed\");\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Payment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContainerDeliveryAddress\",\n      children: /*#__PURE__*/_jsxDEV(DeliveryAddress, {\n        formRef: formRefAdrress,\n        formRefOther: formRefOther\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContainerPayInfo\",\n      children: /*#__PURE__*/_jsxDEV(PayInfo, {\n        payMethod: payMethod,\n        deliveryMethod: deliveryMethod1,\n        changeDeliveryMethod: changeDeliveryMethod,\n        changePayMethod: changePayMethod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContainerOrderInfo\",\n      children: /*#__PURE__*/_jsxDEV(OrderInfo, {\n        intoMoney: calculateTotal(cartList),\n        deliveryFee: deliveryFee,\n        totalPay: calculateTotal(cartList) + deliveryFee,\n        dataList: cartList,\n        handleClickOrder: handleClickOrder,\n        headerList: headerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"DHPvezbQY7qtMGQcZwsBSLBkx1Y=\", false, function () {\n  return [useHistory, useSelector, useSelector, useDispatch];\n});\n\n_c = Payment;\nexport default Payment;\nconst payMethod = [{\n  id: \"P001\",\n  title: \"Thanh toán khi giao hàng (COD)\"\n}, {\n  id: \"P002\",\n  title: \"Thanh toán online qua cổng OnePay bằng thẻ ATM nội địa\"\n}, {\n  id: \"P003\",\n  title: \"Chuyển khoản qua ngân hàng\"\n}, {\n  id: \"P004\",\n  title: \"Thanh toán online qua cổng OnePay bằng thẻ Visa/Master/JCB\"\n}];\nconst headerList = [{\n  flex: 1,\n  label: \"\",\n  propertyMapping: \"imageUrl\",\n  type: \"IMAGE\",\n  formatCurrency: false\n}, {\n  flex: 3,\n  label: \"TÊN SẢN PHẨM\",\n  propertyMapping: \"productName\",\n  type: \"LABLE\",\n  formatCurrency: false\n}, {\n  flex: 2,\n  label: \"GIÁ\",\n  propertyMapping: \"price\",\n  type: \"LABLE\",\n  formatCurrency: true\n}, {\n  flex: 2,\n  label: \"SỐ LƯỢNG\",\n  propertyMapping: \"amount\",\n  type: \"LABLE\",\n  formatCurrency: false\n}];\nconst deliveryMethod1 = [{\n  id: \"D001\",\n  title: \"Vui lòng chọn cách vận chuyển\",\n  fee: 0\n}, {\n  id: \"D002\",\n  title: \"Chuyển phát nhanh\",\n  fee: 30000\n}, {\n  id: \"D003\",\n  title: \"Chuyển phát qua bưu điện\",\n  fee: 30000\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/Payment/Payment.jsx"],"names":["React","useEffect","useState","useRef","DeliveryAddress","PayInfo","OrderInfo","useSelector","useDispatch","calculateIntoMoney","calculateTotal","addDeliveryMethod","addPaymentMethod","setID","setStatus","orderDetailApi","useHistory","useFormikContext","Payment","paymentMethod","setPaymentMethod","deliveryMethod","setDeliveryMethod","deliveryFee","setDeliveryFee","history","cartList","carts","cart","cartDetail","disPatch","formRefAdrress","formRefOther","payMethod","changeDeliveryMethod","item","fee","changePayMethod","handleClickOrder","console","log","current","submitForm","deliveryMethod1","headerList","id","title","flex","label","propertyMapping","type","formatCurrency"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport DeliveryAddress from \"../../component/DeliveryAddress/DeliveryAddress\";\r\nimport PayInfo from \"../../component/PayInfo/PayInfo\";\r\nimport OrderInfo from \"../../component/OrderInfo/OrderInfo\";\r\n\r\nimport \"./Payment.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { calculateIntoMoney, calculateTotal } from \"../../util/util\";\r\nimport {\r\n  addDeliveryMethod,\r\n  addPaymentMethod,\r\n  setID,\r\n  setStatus,\r\n} from \"../../actions/cart\";\r\nimport orderDetailApi from \"../../api/orderDetail\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nfunction Payment() {\r\n  const [paymentMethod, setPaymentMethod] = useState([]);\r\n  const [deliveryMethod, setDeliveryMethod] = useState([]);\r\n  const [deliveryFee, setDeliveryFee] = useState(0);\r\n  const history = useHistory();\r\n  let cartList = useSelector((carts) => carts.cart.cartList);\r\n  let cartDetail = useSelector((carts) => carts.cart);\r\n  const disPatch = useDispatch();\r\n  cartList = calculateIntoMoney(cartList);\r\n  const formRefAdrress = useRef(null);\r\n  const formRefOther = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    setPaymentMethod(payMethod);\r\n    setDeliveryMethod(deliveryMethod);\r\n  }, [payMethod, deliveryMethod]);\r\n\r\n  const changeDeliveryMethod = (item) => {\r\n    disPatch(addDeliveryMethod(item));\r\n    setDeliveryFee(item.fee);\r\n  };\r\n  const changePayMethod = (item) => {\r\n    disPatch(addPaymentMethod(item));\r\n  };\r\n\r\n  const handleClickOrder = () => {\r\n    console.log(\"test11\", formRefAdrress);\r\n    formRefAdrress.current.submitForm();\r\n    formRefOther.current.submitForm();\r\n    // orderDetailApi.addOrderDetail(cartDetail).then((result) => {\r\n    //   disPatch(setID(result.id));\r\n    //   disPatch(setStatus(\"Waiting Approval\"));\r\n    //   history.push(\"/cart-detail/completed\");\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Payment\">\r\n      <div className=\"ContainerDeliveryAddress\">\r\n        <DeliveryAddress formRef={formRefAdrress} formRefOther={formRefOther} />\r\n      </div>\r\n      <div className=\"ContainerPayInfo\">\r\n        <PayInfo\r\n          payMethod={payMethod}\r\n          deliveryMethod={deliveryMethod1}\r\n          changeDeliveryMethod={changeDeliveryMethod}\r\n          changePayMethod={changePayMethod}\r\n        />\r\n      </div>\r\n      <div className=\"ContainerOrderInfo\">\r\n        <OrderInfo\r\n          intoMoney={calculateTotal(cartList)}\r\n          deliveryFee={deliveryFee}\r\n          totalPay={calculateTotal(cartList) + deliveryFee}\r\n          dataList={cartList}\r\n          handleClickOrder={handleClickOrder}\r\n          headerList={headerList}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n\r\nconst payMethod = [\r\n  {\r\n    id: \"P001\",\r\n    title: \"Thanh toán khi giao hàng (COD)\",\r\n  },\r\n  {\r\n    id: \"P002\",\r\n    title: \"Thanh toán online qua cổng OnePay bằng thẻ ATM nội địa\",\r\n  },\r\n  {\r\n    id: \"P003\",\r\n    title: \"Chuyển khoản qua ngân hàng\",\r\n  },\r\n  {\r\n    id: \"P004\",\r\n    title: \"Thanh toán online qua cổng OnePay bằng thẻ Visa/Master/JCB\",\r\n  },\r\n];\r\n\r\nconst headerList = [\r\n  {\r\n    flex: 1,\r\n    label: \"\",\r\n    propertyMapping: \"imageUrl\",\r\n    type: \"IMAGE\",\r\n    formatCurrency: false,\r\n  },\r\n  {\r\n    flex: 3,\r\n    label: \"TÊN SẢN PHẨM\",\r\n    propertyMapping: \"productName\",\r\n    type: \"LABLE\",\r\n    formatCurrency: false,\r\n  },\r\n  {\r\n    flex: 2,\r\n    label: \"GIÁ\",\r\n    propertyMapping: \"price\",\r\n    type: \"LABLE\",\r\n    formatCurrency: true,\r\n  },\r\n  {\r\n    flex: 2,\r\n    label: \"SỐ LƯỢNG\",\r\n    propertyMapping: \"amount\",\r\n    type: \"LABLE\",\r\n    formatCurrency: false,\r\n  },\r\n];\r\n\r\nconst deliveryMethod1 = [\r\n  {\r\n    id: \"D001\",\r\n    title: \"Vui lòng chọn cách vận chuyển\",\r\n    fee: 0,\r\n  },\r\n  {\r\n    id: \"D002\",\r\n    title: \"Chuyển phát nhanh\",\r\n    fee: 30000,\r\n  },\r\n  {\r\n    id: \"D003\",\r\n    title: \"Chuyển phát qua bưu điện\",\r\n    fee: 30000,\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}