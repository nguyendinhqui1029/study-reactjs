{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\ChartLine\\\\ChartLine.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport PropTypes from 'prop-types';\nimport './ChartLine.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartLine.propTypes = {\n  dataChart: PropTypes.array.isRequired,\n  labelsX: PropTypes.array.isRequired,\n  chartName: PropTypes.string,\n  labelNote: PropTypes.string\n};\nChartLine.defaultProps = {\n  chartName: \"\",\n  labelNote: \"\"\n};\n\nfunction ChartLine(props) {\n  _s();\n\n  const {\n    dataChart,\n    labelsX,\n    chartName,\n    labelNote\n  } = props;\n  const [infoChart, setInfoChart] = useState({\n    labels: labelsX,\n    datasets: [{\n      label: labelNote,\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"rgba(75,192,192,1)\",\n      borderColor: \"rgba(0,0,0,1)\",\n      cscaleFontColorolor: \"rgba(75,192,192,1)\",\n      borderWidth: 1,\n      data: dataChart\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineChart\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: infoChart,\n      options: {\n        title: {\n          display: true,\n          text: chartName,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: \"right\"\n        }\n      },\n      className: \"Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartLine, \"cRrF8SP9MH5Ln651YOEjvR2BLVs=\");\n\n_c = ChartLine;\nexport default ChartLine;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartLine\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/ChartLine/ChartLine.jsx"],"names":["React","Line","PropTypes","useState","ChartLine","propTypes","dataChart","array","isRequired","labelsX","chartName","string","labelNote","defaultProps","props","infoChart","setInfoChart","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","cscaleFontColorolor","borderWidth","data","title","display","text","fontSize","legend","position"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,kBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAEJ,SAAS,CAACK,KAAV,CAAgBC,UADP;AAEpBC,EAAAA,OAAO,EAAEP,SAAS,CAACK,KAAV,CAAgBC,UAFL;AAGpBE,EAAAA,SAAS,EAAER,SAAS,CAACS,MAHD;AAIpBC,EAAAA,SAAS,EAAEV,SAAS,CAACS;AAJD,CAAtB;AAMAP,SAAS,CAACS,YAAV,GAAyB;AACvBH,EAAAA,SAAS,EAAE,EADY;AAEvBE,EAAAA,SAAS,EAAC;AAFa,CAAzB;;AAMA,SAASR,SAAT,CAAmBU,KAAnB,EAA0B;AAAA;;AACxB,QAAM;AAAER,IAAAA,SAAF;AAAaG,IAAAA,OAAb;AAAsBC,IAAAA,SAAtB;AAAiCE,IAAAA;AAAjC,MAA+CE,KAArD;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AACzCc,IAAAA,MAAM,EAAER,OADiC;AAEzCS,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAEP,SADT;AAEEQ,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,WAAW,EAAE,GAHf;AAIEC,MAAAA,eAAe,EAAE,oBAJnB;AAKEC,MAAAA,WAAW,EAAE,eALf;AAMEC,MAAAA,mBAAmB,EAAE,oBANvB;AAOEC,MAAAA,WAAW,EAAE,CAPf;AAQEC,MAAAA,IAAI,EAAEpB;AARR,KADQ;AAF+B,GAAD,CAA1C;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAES,SADR;AAEE,MAAA,OAAO,EAAE;AACPY,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAEnB,SAFD;AAGLoB,UAAAA,QAAQ,EAAE;AAHL,SADA;AAMPC,QAAAA,MAAM,EAAE;AACNH,UAAAA,OAAO,EAAE,IADH;AAENI,UAAAA,QAAQ,EAAE;AAFJ;AAND,OAFX;AAaE,MAAA,SAAS,EAAC;AAbZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApCQ5B,S;;KAAAA,S;AAsCT,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport PropTypes from 'prop-types';\r\nimport './ChartLine.scss'\r\nimport { useState } from 'react';\r\n\r\nChartLine.propTypes = {\r\n  dataChart: PropTypes.array.isRequired,\r\n  labelsX: PropTypes.array.isRequired,\r\n  chartName: PropTypes.string,\r\n  labelNote: PropTypes.string,\r\n};\r\nChartLine.defaultProps = {\r\n  chartName: \"\",\r\n  labelNote:\"\",\r\n};\r\n\r\n\r\nfunction ChartLine(props) {\r\n  const { dataChart, labelsX, chartName, labelNote } = props;\r\n  const [infoChart, setInfoChart] = useState({\r\n    labels: labelsX,\r\n    datasets: [\r\n      {\r\n        label: labelNote,\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,192,192,1)\",\r\n        borderColor: \"rgba(0,0,0,1)\",\r\n        cscaleFontColorolor: \"rgba(75,192,192,1)\",\r\n        borderWidth: 1,\r\n        data: dataChart,\r\n      },\r\n    ],\r\n  });\r\n  return (\r\n    <div className=\"LineChart\">\r\n      <Line\r\n        data={infoChart}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: chartName,\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n          },\r\n        }}\r\n        className=\"Line\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartLine;"]},"metadata":{},"sourceType":"module"}