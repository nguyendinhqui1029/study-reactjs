{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\SelectedInput\\\\SelectedInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./SelectedInput.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSelectedInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  dataSource: PropTypes.array,\n  disabled: PropTypes.bool\n};\nSelectedInput.defaultProps = {\n  dataSource: [],\n  disabled: false\n};\n\nfunction SelectedInput(props) {\n  _s();\n\n  const {\n    field,\n    form,\n    dataSource,\n    disabled\n  } = props;\n  const {\n    errors,\n    touched\n  } = form;\n  const {\n    name,\n    value\n  } = field;\n  const showError = errors[name] && touched[name];\n  const showValidField = touched[name] && !errors[name];\n  const [selected, setSelected] = useState(value);\n  const [getdataSource, setDataSource] = useState(value);\n  useEffect(() => {\n    if (props.dataSource.length) {\n      setDataSource(props.dataSource);\n    }\n  }, [props.dataSource]);\n\n  function handleEventChange(selectedOption) {\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption;\n    const dataChange = {\n      target: {\n        name: name,\n        value: selectedValue\n      }\n    };\n    field.onChange(dataChange);\n    setSelected(selectedValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContainerInput\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showValidField ? \"ContainerInput InputValid\" : showError ? \"ContainerInput InputInvalid\" : \"ContainerInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", { ...field,\n          onChange: event => handleEventChange(event.target),\n          disabled: disabled,\n          children: dataSource.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.id,\n              selected: item.id === selected,\n              children: item.label\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"IconValid\",\n          icon: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Error\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"IconInvalid\",\n          icon: \"exclamation-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showError && errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectedInput, \"JuL90BKEw0rjtJg7WAXVfeRxVY8=\");\n\n_c = SelectedInput;\nexport default SelectedInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedInput\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/SelectedInput/SelectedInput.jsx"],"names":["React","useEffect","useState","PropTypes","FontAwesomeIcon","SelectedInput","propTypes","field","object","isRequired","form","dataSource","array","disabled","bool","defaultProps","props","errors","touched","name","value","showError","showValidField","selected","setSelected","getdataSource","setDataSource","length","handleEventChange","selectedOption","selectedValue","dataChange","target","onChange","event","map","item","id","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./SelectedInput.scss\";\r\nSelectedInput.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  dataSource: PropTypes.array,\r\n  disabled:PropTypes.bool,\r\n};\r\nSelectedInput.defaultProps = {\r\n  dataSource: [],\r\n  disabled:false,\r\n};\r\nfunction SelectedInput(props) {\r\n  const { field, form, dataSource, disabled } = props;\r\n  const { errors, touched } = form;\r\n  const { name, value } = field;\r\n  const showError = errors[name] && touched[name];\r\n  const showValidField = touched[name] && !errors[name];\r\n  \r\n  const [selected, setSelected] = useState(value);\r\n  const [getdataSource, setDataSource] = useState(value);\r\n  useEffect(() => {\r\n    if (props.dataSource.length) {\r\n      setDataSource(props.dataSource);\r\n    }\r\n  }, [props.dataSource]);\r\n  function handleEventChange(selectedOption) {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n    const dataChange = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(dataChange);\r\n    setSelected(selectedValue);\r\n  }\r\n  return (\r\n    <div className=\"ContainerInput\">\r\n      <div\r\n        className={\r\n          showValidField\r\n            ? \"ContainerInput InputValid\"\r\n            : showError\r\n            ? \"ContainerInput InputInvalid\"\r\n            : \"ContainerInput\"\r\n        }\r\n      >\r\n        <div className=\"Input\">\r\n          <select\r\n            {...field}\r\n            onChange={(event) => handleEventChange(event.target)}\r\n            disabled={disabled}>\r\n            {dataSource.map((item) => {\r\n              return (\r\n                <option\r\n                  key={item.id}\r\n                  value={item.id}\r\n                  selected={item.id === selected}\r\n                >\r\n                  {item.label}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <FontAwesomeIcon className=\"IconValid\" icon=\"check\" />\r\n        </div>\r\n        <div className=\"Error\">\r\n          <FontAwesomeIcon className=\"IconInvalid\" icon=\"exclamation-circle\" />\r\n          <span>{showError && errors[name]}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedInput;\r\n"]},"metadata":{},"sourceType":"module"}