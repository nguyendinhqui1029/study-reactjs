{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\Pagination\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPagination.propTypes = {\n  currentPage: PropTypes.number,\n  itemPage: PropTypes.number,\n  totalItem: PropTypes.number,\n  limit: PropTypes.number,\n  pageChangeClick: PropTypes.func\n};\nPagination.defaultProps = {\n  currentPage: 0,\n  itemPage: 0,\n  totalItem: 0,\n  limit: 5,\n  pageChangeClick: null\n};\n\nfunction getTotalPage(totalPage, limitPage) {\n  return limitPage >= totalPage ? totalPage : limitPage;\n}\n\nfunction Pagination(props) {\n  _s();\n\n  const FIRST_PAGE = 1;\n  const {\n    currentPage,\n    itemPage,\n    totalItem,\n    limit,\n    pageChangeClick\n  } = props;\n  const totalPage = Math.floor(totalItem / itemPage);\n  const [startPage, setStartPage] = useState({\n    FIRST_PAGE\n  });\n  const [endPage, setEndPage] = useState(() => {\n    return getTotalPage(totalPage, limit);\n  });\n  const [current, setCurrent] = useState(currentPage);\n\n  function updateStartEndPage(indexPage, limit) {\n    switch (indexPage) {\n      case endPage:\n        {\n          const startPage = indexPage >= totalPage ? totalPage - limit : indexPage;\n          const endPage = indexPage + limit >= totalPage ? totalPage : indexPage + limit - FIRST_PAGE;\n          setStartPage(startPage);\n          setEndPage(endPage);\n        }\n        break;\n\n      case startPage:\n        {\n          const startPage = indexPage <= FIRST_PAGE ? FIRST_PAGE : indexPage - limit + FIRST_PAGE;\n          const endPage = indexPage <= FIRST_PAGE ? limit : indexPage;\n          setStartPage(startPage);\n          setEndPage(endPage);\n        }\n        break;\n    }\n  }\n\n  function changePagination(indexPage) {\n    if (pageChangeClick) {\n      setCurrent(indexPage);\n      pageChangeClick({ ...{\n          currentPage: indexPage\n        },\n        itemPage,\n        totalItem\n      });\n    }\n  }\n\n  function nextClick() {\n    const pageSelected = current + 1;\n    setCurrent(pageSelected);\n    updateStartEndPage(pageSelected, limit);\n    pageChangeClick({ ...{\n        currentPage: pageSelected\n      },\n      itemPage,\n      totalItem\n    });\n  }\n\n  function prevClick() {\n    const pageSelected = current - 1;\n    setCurrent(pageSelected);\n    updateStartEndPage(pageSelected, 5);\n    pageChangeClick({ ...{\n        currentPage: pageSelected\n      },\n      itemPage,\n      totalItem\n    });\n  }\n\n  const paginationRender = [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: current <= 1 ? \"NextIndex IsDisable\" : \"NextIndex\",\n    onClick: () => prevClick(),\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAngleDoubleLeft,\n      className: \"IconPagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, \"next\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this)];\n\n  for (let ind = startPage; ind <= endPage; ind++) {\n    paginationRender.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      className: ind === current ? \"PageIndex Active\" : \"PageIndex\",\n      onClick: () => changePagination(ind),\n      children: ind\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this));\n  }\n\n  paginationRender.push( /*#__PURE__*/_jsxDEV(\"span\", {\n    className: current >= totalPage ? \"PrevIndex IsDisable\" : \"PrevIndex\",\n    onClick: () => nextClick(),\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAngleDoubleRight,\n      className: \"IconPagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, \"prev\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pagination\",\n    children: paginationRender\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Pagination, \"ZeBGPj06AiUQ0nmW6wKRyFNhIDY=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/Pagination/Pagination.jsx"],"names":["React","useState","PropTypes","FontAwesomeIcon","faAngleDoubleLeft","faAngleDoubleRight","Pagination","propTypes","currentPage","number","itemPage","totalItem","limit","pageChangeClick","func","defaultProps","getTotalPage","totalPage","limitPage","props","FIRST_PAGE","Math","floor","startPage","setStartPage","endPage","setEndPage","current","setCurrent","updateStartEndPage","indexPage","changePagination","nextClick","pageSelected","prevClick","paginationRender","ind","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,iBADF,EAEEC,kBAFF,QAGO,mCAHP;AAIA,OAAO,mBAAP;;AACAC,UAAU,CAACC,SAAX,GAAuB;AACrBC,EAAAA,WAAW,EAAEN,SAAS,CAACO,MADF;AAErBC,EAAAA,QAAQ,EAAER,SAAS,CAACO,MAFC;AAGrBE,EAAAA,SAAS,EAAET,SAAS,CAACO,MAHA;AAIrBG,EAAAA,KAAK,EAAEV,SAAS,CAACO,MAJI;AAKrBI,EAAAA,eAAe,EAAEX,SAAS,CAACY;AALN,CAAvB;AAOAR,UAAU,CAACS,YAAX,GAA0B;AACxBP,EAAAA,WAAW,EAAE,CADW;AAExBE,EAAAA,QAAQ,EAAE,CAFc;AAGxBC,EAAAA,SAAS,EAAE,CAHa;AAIxBC,EAAAA,KAAK,EAAE,CAJiB;AAKxBC,EAAAA,eAAe,EAAE;AALO,CAA1B;;AAQA,SAASG,YAAT,CAAsBC,SAAtB,EAAiCC,SAAjC,EAA4C;AAC1C,SAAOA,SAAS,IAAID,SAAb,GAAyBA,SAAzB,GAAqCC,SAA5C;AACD;;AACD,SAASZ,UAAT,CAAoBa,KAApB,EAA2B;AAAA;;AACzB,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAM;AAAEZ,IAAAA,WAAF;AAAeE,IAAAA,QAAf;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA,KAApC;AAA2CC,IAAAA;AAA3C,MAA+DM,KAArE;AACA,QAAMF,SAAS,GAAGI,IAAI,CAACC,KAAL,CAAWX,SAAS,GAAGD,QAAvB,CAAlB;AAEA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC;AAAEmB,IAAAA;AAAF,GAAD,CAA1C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,MAAM;AAC3C,WAAOe,YAAY,CAACC,SAAD,EAAYL,KAAZ,CAAnB;AACD,GAFqC,CAAtC;AAGA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAACO,WAAD,CAAtC;;AAEA,WAASqB,kBAAT,CAA4BC,SAA5B,EAAuClB,KAAvC,EAA8C;AAC5C,YAAQkB,SAAR;AACE,WAAKL,OAAL;AACE;AACE,gBAAMF,SAAS,GACbO,SAAS,IAAIb,SAAb,GAAyBA,SAAS,GAAGL,KAArC,GAA6CkB,SAD/C;AAEA,gBAAML,OAAO,GACXK,SAAS,GAAGlB,KAAZ,IAAqBK,SAArB,GACIA,SADJ,GAEIa,SAAS,GAAGlB,KAAZ,GAAoBQ,UAH1B;AAIAI,UAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,UAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACD;;AACF,WAAKF,SAAL;AACE;AACE,gBAAMA,SAAS,GACbO,SAAS,IAAIV,UAAb,GACIA,UADJ,GAEIU,SAAS,GAAGlB,KAAZ,GAAoBQ,UAH1B;AAIA,gBAAMK,OAAO,GAAGK,SAAS,IAAIV,UAAb,GAA0BR,KAA1B,GAAkCkB,SAAlD;AACAN,UAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,UAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACD;AAvBJ;AAyBD;;AAED,WAASM,gBAAT,CAA0BD,SAA1B,EAAqC;AACnC,QAAIjB,eAAJ,EAAqB;AACnBe,MAAAA,UAAU,CAACE,SAAD,CAAV;AACAjB,MAAAA,eAAe,CAAC,EAAE,GAAG;AAAEL,UAAAA,WAAW,EAAEsB;AAAf,SAAL;AAAiCpB,QAAAA,QAAjC;AAA2CC,QAAAA;AAA3C,OAAD,CAAf;AACD;AACF;;AAED,WAASqB,SAAT,GAAqB;AACnB,UAAMC,YAAY,GAAGN,OAAO,GAAG,CAA/B;AACAC,IAAAA,UAAU,CAACK,YAAD,CAAV;AACAJ,IAAAA,kBAAkB,CAACI,YAAD,EAAerB,KAAf,CAAlB;AACAC,IAAAA,eAAe,CAAC,EACd,GAAG;AAAEL,QAAAA,WAAW,EAAEyB;AAAf,OADW;AAEdvB,MAAAA,QAFc;AAGdC,MAAAA;AAHc,KAAD,CAAf;AAKD;;AAED,WAASuB,SAAT,GAAqB;AACnB,UAAMD,YAAY,GAAGN,OAAO,GAAG,CAA/B;AACAC,IAAAA,UAAU,CAACK,YAAD,CAAV;AACAJ,IAAAA,kBAAkB,CAACI,YAAD,EAAe,CAAf,CAAlB;AACApB,IAAAA,eAAe,CAAC,EACd,GAAG;AAAEL,QAAAA,WAAW,EAAEyB;AAAf,OADW;AAEdvB,MAAAA,QAFc;AAGdC,MAAAA;AAHc,KAAD,CAAf;AAKD;;AAED,QAAMwB,gBAAgB,GAAG,cACvB;AACE,IAAA,SAAS,EAAER,OAAO,IAAI,CAAX,GAAe,qBAAf,GAAuC,WADpD;AAEE,IAAA,OAAO,EAAE,MAAMO,SAAS,EAF1B;AAAA,2BAKE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAE9B,iBAAvB;AAA0C,MAAA,SAAS,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AALF,KAGO,MAHP;AAAA;AAAA;AAAA;AAAA,UADuB,CAAzB;;AASA,OAAK,IAAIgC,GAAG,GAAGb,SAAf,EAA0Ba,GAAG,IAAIX,OAAjC,EAA0CW,GAAG,EAA7C,EAAiD;AAC/CD,IAAAA,gBAAgB,CAACE,IAAjB,eACE;AAEE,MAAA,SAAS,EAAED,GAAG,KAAKT,OAAR,GAAkB,kBAAlB,GAAuC,WAFpD;AAGE,MAAA,OAAO,EAAE,MAAMI,gBAAgB,CAACK,GAAD,CAHjC;AAAA,gBAKGA;AALH,OACOA,GADP;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACDD,EAAAA,gBAAgB,CAACE,IAAjB,eACE;AACE,IAAA,SAAS,EAAEV,OAAO,IAAIV,SAAX,GAAuB,qBAAvB,GAA+C,WAD5D;AAEE,IAAA,OAAO,EAAE,MAAMe,SAAS,EAF1B;AAAA,2BAKE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAE3B,kBAAvB;AAA2C,MAAA,SAAS,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA;AALF,KAGO,MAHP;AAAA;AAAA;AAAA;AAAA,UADF;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAA6B8B;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnGQ7B,U;;KAAAA,U;AAqGT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Pagination.scss\";\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number,\r\n  itemPage: PropTypes.number,\r\n  totalItem: PropTypes.number,\r\n  limit: PropTypes.number,\r\n  pageChangeClick: PropTypes.func,\r\n};\r\nPagination.defaultProps = {\r\n  currentPage: 0,\r\n  itemPage: 0,\r\n  totalItem: 0,\r\n  limit: 5,\r\n  pageChangeClick: null,\r\n};\r\n\r\nfunction getTotalPage(totalPage, limitPage) {\r\n  return limitPage >= totalPage ? totalPage : limitPage;\r\n}\r\nfunction Pagination(props) {\r\n  const FIRST_PAGE = 1;\r\n  const { currentPage, itemPage, totalItem, limit, pageChangeClick } = props;\r\n  const totalPage = Math.floor(totalItem / itemPage);\r\n\r\n  const [startPage, setStartPage] = useState({ FIRST_PAGE });\r\n  const [endPage, setEndPage] = useState(() => {\r\n    return getTotalPage(totalPage, limit);\r\n  });\r\n  const [current, setCurrent] = useState(currentPage);\r\n\r\n  function updateStartEndPage(indexPage, limit) {\r\n    switch (indexPage) {\r\n      case endPage:\r\n        {\r\n          const startPage =\r\n            indexPage >= totalPage ? totalPage - limit : indexPage;\r\n          const endPage =\r\n            indexPage + limit >= totalPage\r\n              ? totalPage\r\n              : indexPage + limit - FIRST_PAGE;\r\n          setStartPage(startPage);\r\n          setEndPage(endPage);\r\n        }\r\n        break;\r\n      case startPage:\r\n        {\r\n          const startPage =\r\n            indexPage <= FIRST_PAGE\r\n              ? FIRST_PAGE\r\n              : indexPage - limit + FIRST_PAGE;\r\n          const endPage = indexPage <= FIRST_PAGE ? limit : indexPage;\r\n          setStartPage(startPage);\r\n          setEndPage(endPage);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  function changePagination(indexPage) {\r\n    if (pageChangeClick) {\r\n      setCurrent(indexPage);\r\n      pageChangeClick({ ...{ currentPage: indexPage }, itemPage, totalItem });\r\n    }\r\n  }\r\n\r\n  function nextClick() {\r\n    const pageSelected = current + 1;\r\n    setCurrent(pageSelected);\r\n    updateStartEndPage(pageSelected, limit);\r\n    pageChangeClick({\r\n      ...{ currentPage: pageSelected },\r\n      itemPage,\r\n      totalItem,\r\n    });\r\n  }\r\n\r\n  function prevClick() {\r\n    const pageSelected = current - 1;\r\n    setCurrent(pageSelected);\r\n    updateStartEndPage(pageSelected, 5);\r\n    pageChangeClick({\r\n      ...{ currentPage: pageSelected },\r\n      itemPage,\r\n      totalItem,\r\n    });\r\n  }\r\n\r\n  const paginationRender = [\r\n    <span\r\n      className={current <= 1 ? \"NextIndex IsDisable\" : \"NextIndex\"}\r\n      onClick={() => prevClick()}\r\n      key={\"next\"}\r\n    >\r\n      <FontAwesomeIcon icon={faAngleDoubleLeft} className=\"IconPagination\" />\r\n    </span>,\r\n  ];\r\n  for (let ind = startPage; ind <= endPage; ind++) {\r\n    paginationRender.push(\r\n      <span\r\n        key={ind}\r\n        className={ind === current ? \"PageIndex Active\" : \"PageIndex\"}\r\n        onClick={() => changePagination(ind)}\r\n      >\r\n        {ind}\r\n      </span>\r\n    );\r\n  }\r\n  paginationRender.push(\r\n    <span\r\n      className={current >= totalPage ? \"PrevIndex IsDisable\" : \"PrevIndex\"}\r\n      onClick={() => nextClick()}\r\n      key={\"prev\"}\r\n    >\r\n      <FontAwesomeIcon icon={faAngleDoubleRight} className=\"IconPagination\" />\r\n    </span>\r\n  );\r\n\r\n  return <div className=\"Pagination\">{paginationRender}</div>;\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}