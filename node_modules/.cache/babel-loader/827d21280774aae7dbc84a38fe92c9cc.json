{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\DeliveryAddress\\\\DeliveryAddress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../../component/Input/Input\";\nimport SelectedInput from \"../../component/SelectedInput/SelectedInput\";\nimport { Formik, Form, FastField } from \"formik\";\nimport Yup from \"../../validation/CustomValidation\";\nimport \"./DeliveryAddress.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDeliveryAddress.propTypes = {};\nDeliveryAddress.defaultProps = {};\n\nfunction DeliveryAddress(props) {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [districtsByCity, setDistrictsByCity] = useState([]);\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState([]);\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedDistrictsSubAddress, setSelectedDistrictsSubAddress] = useState(null);\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    city: {\n      id: '',\n      label: 'sadas'\n    },\n    district: \"\"\n  };\n  useEffect(() => {\n    async function fetchCities() {\n      try {\n        const header = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        };\n        const urlRequest = \"./json/cities.json\";\n        const response = await fetch(urlRequest, header);\n        const responseJson = await response.json();\n        setCities([{\n          id: \"\",\n          label: \"Vui lòng chọn Tỉnh/Thành Phố\"\n        }, ...responseJson]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchCities();\n  }, []);\n  useEffect(() => {\n    async function fetchDistricts() {\n      try {\n        if (!districts.length) {\n          const header = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            }\n          };\n          const urlRequest = \"./json/districts.json\";\n          const response = await fetch(urlRequest, header);\n          const responseJson = await response.json();\n          setDistricts(responseJson);\n          const dis = responseJson.find(district => {\n            return district.idCity === selectedCity;\n          });\n          dis && setDistrictsByCity(districts.district);\n          const disSubAddress = responseJson.find(district => {\n            return district.idCity === selectedCitySubAddress;\n          });\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\n        } else {\n          const dis = districts.find(district => {\n            return district.idCity === selectedCity;\n          });\n          dis && setDistrictsByCity(dis.district);\n          const disSubAddress = districts.find(district => {\n            return district.idCity === selectedCitySubAddress;\n          });\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchDistricts();\n  }, [selectedCitySubAddress]);\n\n  function changeOtherAddress(event) {\n    setShowOtherAddress(event.target.checked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeliveryAddress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HeaderContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"1. \\u0110\\u1ECAA CH\\u1EC8 THANH TO\\xC1N V\\xC0 GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN THANH TO\\xC1N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContainerLink\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"link123\",\n          className: \"RegisterLink\",\n          children: \"\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n mua h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"link124\",\n          className: \"LoginLink\",\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MainInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Mua h\\xE0ng kh\\xF4ng c\\u1EA7n t\\xE0i kho\\u1EA3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          render: formik => {\n            // setSelectedCity(formik.values.city);\n            return /*#__PURE__*/_jsxDEV(Form, {\n              className: \"FormInfo\",\n              children: [/*#__PURE__*/_jsxDEV(FastField, {\n                name: \"name\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"email\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"address\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"city\",\n                component: SelectedInput,\n                dataSource: cities.map(city => {\n                  return {\n                    key: city.id,\n                    label: city.label\n                  };\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"district\",\n                component: SelectedInput,\n                dataSource: districtsByCity.map(district => {\n                  return {\n                    key: district.alias,\n                    label: district.label\n                  };\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: \"\",\n                onChange: () => {},\n                placeholder: \"Ghi ch\\xFA \\u0111\\u01A1n h\\xE0ng\",\n                rows: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SubInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"otherAddress\",\n            placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\",\n            onChange: event => changeOtherAddress(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Giao h\\xE0ng \\u0111\\u1ECBa ch\\u1EC9 kh\\xE1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: isShowOtherAddress ? \"\" : \"SubForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              placeholder: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: event => setSelectedCitySubAddress(event.target.value),\n              children: cities.map(city => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: city.id,\n                  selected: selectedCitySubAddress === city.id,\n                  children: city.label\n                }, city.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: districtsByCitySubAddress.map(district => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: district.alias,\n                  selected: selectedDistrictsSubAddress === district.alias,\n                  children: district.label\n                }, district.alias, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeliveryAddress, \"IO8As018mc3nk2vqUcEHAwO5b1Q=\");\n\n_c = DeliveryAddress;\nexport default DeliveryAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryAddress\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/DeliveryAddress/DeliveryAddress.jsx"],"names":["React","useEffect","useState","PropTypes","Link","Input","SelectedInput","Formik","Form","FastField","Yup","DeliveryAddress","propTypes","defaultProps","props","cities","setCities","districts","setDistricts","districtsByCity","setDistrictsByCity","districtsByCitySubAddress","setDistrictsByCitySubAddress","selectedCitySubAddress","setSelectedCitySubAddress","selectedCity","setSelectedCity","selectedDistrictsSubAddress","setSelectedDistrictsSubAddress","isShowOtherAddress","setShowOtherAddress","initialValues","name","email","address","city","id","label","district","fetchCities","header","headers","Accept","urlRequest","response","fetch","responseJson","json","error","console","log","fetchDistricts","length","dis","find","idCity","disSubAddress","changeOtherAddress","event","target","checked","formik","map","key","alias","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../../component/Input/Input\";\r\nimport SelectedInput from \"../../component/SelectedInput/SelectedInput\";\r\nimport { Formik, Form, FastField } from \"formik\";\r\nimport Yup from \"../../validation/CustomValidation\";\r\nimport \"./DeliveryAddress.scss\";\r\nDeliveryAddress.propTypes = {};\r\nDeliveryAddress.defaultProps = {};\r\n\r\nfunction DeliveryAddress(props) {\r\n  const [cities, setCities] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [districtsByCity, setDistrictsByCity] = useState([]);\r\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState(\r\n    []\r\n  );\r\n\r\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedDistrictsSubAddress, setSelectedDistrictsSubAddress] =\r\n    useState(null);\r\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\r\n  const initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    city: {id:'',label:'sadas'},\r\n    district: \"\",\r\n  };\r\n  useEffect(() => {\r\n    async function fetchCities() {\r\n      try {\r\n        const header = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        };\r\n        const urlRequest = \"./json/cities.json\";\r\n        const response = await fetch(urlRequest, header);\r\n        const responseJson = await response.json();\r\n\r\n        setCities([\r\n          { id: \"\", label: \"Vui lòng chọn Tỉnh/Thành Phố\" },\r\n          ...responseJson,\r\n        ]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchCities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchDistricts() {\r\n      try {\r\n        if (!districts.length) {\r\n          const header = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          };\r\n          const urlRequest = \"./json/districts.json\";\r\n          const response = await fetch(urlRequest, header);\r\n          const responseJson = await response.json();\r\n\r\n          setDistricts(responseJson);\r\n          const dis = responseJson.find((district) => {\r\n            return district.idCity === selectedCity;\r\n          });\r\n          dis && setDistrictsByCity(districts.district);\r\n          const disSubAddress = responseJson.find((district) => {\r\n            return district.idCity === selectedCitySubAddress;\r\n          });\r\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\r\n        } else {\r\n          const dis = districts.find((district) => {\r\n            return district.idCity === selectedCity;\r\n          });\r\n          dis && setDistrictsByCity(dis.district);\r\n\r\n          const disSubAddress = districts.find((district) => {\r\n            return district.idCity === selectedCitySubAddress;\r\n          });\r\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchDistricts();\r\n  }, [ selectedCitySubAddress]);\r\n\r\n  function changeOtherAddress(event) {\r\n    setShowOtherAddress(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <div className=\"DeliveryAddress\">\r\n      <div className=\"HeaderContainer\">\r\n        <h3 className=\"HeaderContent\">1. ĐỊA CHỈ THANH TOÁN VÀ GIAO HÀNG</h3>\r\n      </div>\r\n      <div className=\"ContentContainer\">\r\n        <h3 className=\"HeaderContent\">THÔNG TIN THANH TOÁN</h3>\r\n        <div className=\"ContainerLink\">\r\n          <Link to=\"link123\" className=\"RegisterLink\">\r\n            Đăng ký tài khoản mua hàng\r\n          </Link>\r\n          <span>|</span>\r\n          <Link to=\"link124\" className=\"LoginLink\">\r\n            Đăng nhập\r\n          </Link>\r\n        </div>\r\n        <div className=\"MainInfo\">\r\n          <h5>Mua hàng không cần tài khoản</h5>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            render={formik => {\r\n              // setSelectedCity(formik.values.city);\r\n              return (\r\n                <Form className=\"FormInfo\">\r\n                  <FastField\r\n                    name=\"name\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Họ và Tên\"\r\n                  />\r\n                  <FastField\r\n                    name=\"email\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FastField\r\n                    name=\"address\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Địa chỉ\"\r\n                  />\r\n                  <FastField\r\n                    name=\"city\"\r\n                    component={SelectedInput}\r\n                    dataSource={cities.map((city) => {\r\n                      return { key: city.id, label: city.label };\r\n                    })}\r\n                  />\r\n                  <FastField\r\n                    name=\"district\"\r\n                    component={SelectedInput}\r\n                    dataSource={districtsByCity.map((district) => {\r\n                      return { key: district.alias, label: district.label };\r\n                    })}\r\n                  />\r\n                  <textarea\r\n                    value=\"\"\r\n                    onChange={() => {}}\r\n                    placeholder=\"Ghi chú đơn hàng\"\r\n                    rows=\"5\"\r\n                  />\r\n                </Form>\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        <h3 className=\"HeaderContent\">THÔNG TIN GIAO HÀNG</h3>\r\n        <div className=\"SubInfo\">\r\n          <span>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"otherAddress\"\r\n              placeholder=\"Họ và Tên\"\r\n              onChange={(event) => changeOtherAddress(event)}\r\n            />\r\n            <span>Giao hàng địa chỉ khác</span>\r\n          </span>\r\n          <form className={isShowOtherAddress ? \"\" : \"SubForm\"}>\r\n            <div className=\"FormInfo\">\r\n              <input type=\"text\" name=\"name\" placeholder=\"Họ và Tên\" />\r\n\r\n              <input type=\"text\" name=\"phone\" placeholder=\"Số điện thoại\" />\r\n\r\n              <input type=\"text\" name=\"email\" placeholder=\"Email\" />\r\n\r\n              <input type=\"text\" name=\"address\" placeholder=\"Address\" />\r\n\r\n              <select\r\n                onChange={(event) =>\r\n                  setSelectedCitySubAddress(event.target.value)\r\n                }\r\n              >\r\n                {cities.map((city) => {\r\n                  return (\r\n                    <option\r\n                      key={city.id}\r\n                      value={city.id}\r\n                      selected={selectedCitySubAddress === city.id}\r\n                    >\r\n                      {city.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <select>\r\n                {districtsByCitySubAddress.map((district) => {\r\n                  return (\r\n                    <option\r\n                      key={district.alias}\r\n                      value={district.alias}\r\n                      selected={selectedDistrictsSubAddress === district.alias}\r\n                    >\r\n                      {district.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryAddress;\r\n"]},"metadata":{},"sourceType":"module"}