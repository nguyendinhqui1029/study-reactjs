{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\DeliveryAddress\\\\DeliveryAddress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport \"./DeliveryAddress.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDeliveryAddress.propTypes = {};\nDeliveryAddress.defaultProps = {};\n\nfunction DeliveryAddress(props) {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [districtsByCity, setDistrictsByCity] = useState([]);\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\n  const [selectedDistricts, setSelectedDistricts] = useState(null);\n  const [selectedDistrictsSubAddress, setSelectedDistrictsSubAddress] = useState(null);\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\n  useEffect(() => {\n    async function fetchCities() {\n      try {\n        const header = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        };\n        const urlRequest = \"./json/cities.json\";\n        const response = await fetch(urlRequest, header);\n        const responseJson = await response.json();\n        setCities([{\n          id: null,\n          label: \"Vui lòng chọn Tỉnh/Thành Phố\"\n        }, ...responseJson]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchCities();\n  }, []);\n  useEffect(() => {\n    async function fetchDistricts() {\n      try {\n        if (!districts.length) {\n          const header = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            }\n          };\n          const urlRequest = \"./json/districts.json\";\n          const response = await fetch(urlRequest, header);\n          const responseJson = await response.json();\n          setDistricts(responseJson);\n          const dis = responseJson.find(district => {\n            return district.idCity === selectedCity;\n          });\n          dis && setDistrictsByCity(districts.district);\n          const disSubAddress = responseJson.find(district => {\n            return district.idCity === selectedCitySubAddress;\n          });\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\n        } else {\n          const dis = districts.find(district => {\n            return district.idCity === selectedCity;\n          });\n          dis && setDistrictsByCity(dis.district);\n          const disSubAddress = districts.find(district => {\n            return district.idCity === selectedCitySubAddress;\n          });\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchDistricts();\n  }, [selectedCity, selectedCitySubAddress]);\n\n  function changeOtherAddress(event) {\n    setShowOtherAddress(event.target.checked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeliveryAddress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HeaderContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"1. \\u0110\\u1ECAA CH\\u1EC8 THANH TO\\xC1N V\\xC0 GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN THANH TO\\xC1N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContainerLink\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"link123\",\n          className: \"RegisterLink\",\n          children: \"\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n mua h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"link124\",\n          className: \"LoginLink\",\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MainInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Mua h\\xE0ng kh\\xF4ng c\\u1EA7n t\\xE0i kho\\u1EA3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              placeholder: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: event => setSelectedCity(event.target.value),\n              children: cities.map(city => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: city.id,\n                  selected: selectedCity === city.id,\n                  children: city.label\n                }, city.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: districtsByCity.map(district => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: district.alias,\n                  selected: selectedDistricts === district.alias,\n                  children: district.label\n                }, district.alias, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: \"\",\n              onChange: () => {},\n              placeholder: \"Ghi ch\\xFA \\u0111\\u01A1n h\\xE0ng\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SubInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"otherAddress\",\n            placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\",\n            onChange: event => changeOtherAddress(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Giao h\\xE0ng \\u0111\\u1ECBa ch\\u1EC9 kh\\xE1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: isShowOtherAddress ? \"\" : \"SubForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              placeholder: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: event => setSelectedCitySubAddress(event.target.value),\n              children: cities.map(city => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: city.id,\n                  selected: selectedCitySubAddress === city.id,\n                  children: city.label\n                }, city.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              children: districtsByCitySubAddress.map(district => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: district.alias,\n                  selected: selectedDistrictsSubAddress === district.alias,\n                  children: district.label\n                }, district.alias, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeliveryAddress, \"6Fu5bsPPQ7Tt5UiBvaQaSj+OcCg=\");\n\n_c = DeliveryAddress;\nexport default DeliveryAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryAddress\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/DeliveryAddress/DeliveryAddress.jsx"],"names":["React","useEffect","useState","PropTypes","Link","useRouteMatch","DeliveryAddress","propTypes","defaultProps","props","cities","setCities","districts","setDistricts","districtsByCity","setDistrictsByCity","districtsByCitySubAddress","setDistrictsByCitySubAddress","selectedCity","setSelectedCity","selectedCitySubAddress","setSelectedCitySubAddress","selectedDistricts","setSelectedDistricts","selectedDistrictsSubAddress","setSelectedDistrictsSubAddress","isShowOtherAddress","setShowOtherAddress","fetchCities","header","headers","Accept","urlRequest","response","fetch","responseJson","json","id","label","error","console","log","fetchDistricts","length","dis","find","district","idCity","disSubAddress","changeOtherAddress","event","target","checked","value","map","city","alias"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport \"./DeliveryAddress.scss\";\r\nDeliveryAddress.propTypes = {};\r\nDeliveryAddress.defaultProps = {};\r\n\r\nfunction DeliveryAddress(props) {\r\n  const [cities, setCities] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [districtsByCity, setDistrictsByCity] = useState([]);\r\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState(\r\n    []\r\n  );\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\r\n  const [selectedDistricts, setSelectedDistricts] = useState(null);\r\n  const [selectedDistrictsSubAddress, setSelectedDistrictsSubAddress] =useState(null);\r\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchCities() {\r\n      try {\r\n        const header = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        };\r\n        const urlRequest = \"./json/cities.json\";\r\n        const response = await fetch(urlRequest, header);\r\n        const responseJson = await response.json();\r\n\r\n        setCities([\r\n          { id: null, label: \"Vui lòng chọn Tỉnh/Thành Phố\" },\r\n          ...responseJson,\r\n        ]);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchCities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchDistricts() {\r\n      try {\r\n        if (!districts.length) {\r\n          const header = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Accept: \"application/json\",\r\n            },\r\n          };\r\n          const urlRequest = \"./json/districts.json\";\r\n          const response = await fetch(urlRequest, header);\r\n          const responseJson = await response.json();\r\n          setDistricts(responseJson);\r\n          const dis = responseJson.find((district) => {\r\n            return district.idCity === selectedCity;\r\n          });\r\n          dis && setDistrictsByCity(districts.district);\r\n\r\n          const disSubAddress = responseJson.find((district) => {\r\n            return district.idCity === selectedCitySubAddress;\r\n          });\r\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\r\n        } else {\r\n          const dis = districts.find((district) => {\r\n            return district.idCity === selectedCity;\r\n          });\r\n          dis && setDistrictsByCity(dis.district);\r\n\r\n          const disSubAddress = districts.find((district) => {\r\n            return district.idCity === selectedCitySubAddress;\r\n          });\r\n          disSubAddress && setDistrictsByCitySubAddress(disSubAddress.district);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchDistricts();\r\n  }, [selectedCity, selectedCitySubAddress]);\r\n\r\n  function changeOtherAddress(event) {\r\n    setShowOtherAddress(event.target.checked);\r\n  }\r\n  return (\r\n    <div className=\"DeliveryAddress\">\r\n      <div className=\"HeaderContainer\">\r\n        <h3 className=\"HeaderContent\">1. ĐỊA CHỈ THANH TOÁN VÀ GIAO HÀNG</h3>\r\n      </div>\r\n      <div className=\"ContentContainer\">\r\n        <h3 className=\"HeaderContent\">THÔNG TIN THANH TOÁN</h3>\r\n        <div className=\"ContainerLink\">\r\n          <Link to=\"link123\" className=\"RegisterLink\">\r\n            Đăng ký tài khoản mua hàng\r\n          </Link>\r\n          <span>|</span>\r\n          <Link to=\"link124\" className=\"LoginLink\">\r\n            Đăng nhập\r\n          </Link>\r\n        </div>\r\n        <div className=\"MainInfo\">\r\n          <h5>Mua hàng không cần tài khoản</h5>\r\n          <form>\r\n            <div className=\"FormInfo\">\r\n              <input type=\"text\" name=\"name\" placeholder=\"Họ và Tên\" />\r\n\r\n              <input type=\"text\" name=\"phone\" placeholder=\"Số điện thoại\" />\r\n\r\n              <input type=\"text\" name=\"email\" placeholder=\"Email\" />\r\n\r\n              <input type=\"text\" name=\"address\" placeholder=\"Address\" />\r\n\r\n              <select onChange={(event) => setSelectedCity(event.target.value)}>\r\n                {cities.map((city) => {\r\n                  return (\r\n                    <option\r\n                      key={city.id}\r\n                      value={city.id}\r\n                      selected={selectedCity === city.id}\r\n                    >\r\n                      {city.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <select>\r\n                {districtsByCity.map((district) => {\r\n                  return (\r\n                    <option\r\n                      key={district.alias}\r\n                      value={district.alias}\r\n                      selected={selectedDistricts === district.alias}\r\n                    >\r\n                      {district.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <textarea\r\n                value=\"\"\r\n                onChange={() => {}}\r\n                placeholder=\"Ghi chú đơn hàng\"\r\n                rows=\"5\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <h3 className=\"HeaderContent\">THÔNG TIN GIAO HÀNG</h3>\r\n        <div className=\"SubInfo\">\r\n          <span>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"otherAddress\"\r\n              placeholder=\"Họ và Tên\"\r\n              onChange={(event) => changeOtherAddress(event)}\r\n            />\r\n            <span>Giao hàng địa chỉ khác</span>\r\n          </span>\r\n          <form className={isShowOtherAddress ? \"\" : \"SubForm\"}>\r\n            <div className=\"FormInfo\">\r\n              <input type=\"text\" name=\"name\" placeholder=\"Họ và Tên\" />\r\n\r\n              <input type=\"text\" name=\"phone\" placeholder=\"Số điện thoại\" />\r\n\r\n              <input type=\"text\" name=\"email\" placeholder=\"Email\" />\r\n\r\n              <input type=\"text\" name=\"address\" placeholder=\"Address\" />\r\n\r\n              <select\r\n                onChange={(event) =>\r\n                  setSelectedCitySubAddress(event.target.value)\r\n                }\r\n              >\r\n                {cities.map((city) => {\r\n                  return (\r\n                    <option\r\n                      key={city.id}\r\n                      value={city.id}\r\n                      selected={selectedCitySubAddress === city.id}\r\n                    >\r\n                      {city.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n\r\n              <select>\r\n                {districtsByCitySubAddress.map((district) => {\r\n                  return (\r\n                    <option\r\n                      key={district.alias}\r\n                      value={district.alias}\r\n                      selected={selectedDistrictsSubAddress === district.alias}\r\n                    >\r\n                      {district.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryAddress;\r\n"]},"metadata":{},"sourceType":"module"}