{"ast":null,"code":"import { StaticRouter } from \"react-router-dom\";\nconst initialState = {\n  idCustomer: \"5d1b8222-8241-45dd-ac89-70d1793b6f4a\",\n  cartList: [],\n  address: {},\n  addressOther: {},\n  deliveryMethod: {},\n  paymentMethod: {},\n  deliveryFee: 0,\n  intoMoney: 0,\n  totalPay: 0,\n  status: \"draf\"\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_FEE_OTHER\":\n      {\n        if (!!action.payload) {\n          state = { ...state,\n            ...action.payload\n          };\n          sessionStorage.setItem(\"item_cart\", JSON.stringify(state));\n        }\n\n        return state;\n      }\n\n    case \"ADD_ADDRESS\":\n      {\n        state.address = { ...action.payload\n        };\n        return state;\n      }\n\n    case \"ADD_ADDRESS_OTHER\":\n      {\n        state.addressOther = { ...action.payload\n        };\n        return state;\n      }\n\n    case \"ADD_DELIVERY_METHOD\":\n      {\n        state.deliveryMethod = { ...action.payload\n        };\n        return state;\n      }\n\n    case \"ADD_PAYMENT_METHOD\":\n      {\n        state.paymentMethod = { ...action.payload\n        };\n        return state;\n      }\n\n    case \"ADD_CART\":\n      {\n        let product = state.cartList.find(cart => {\n          return cart.id === action.payload.id;\n        });\n\n        if (!!product) {\n          product.amount += 1;\n        } else {\n          state.cartList.push({ ...action.payload,\n            amount: 1\n          });\n        }\n\n        const obj = { ...state,\n          cartList: [...state.cartList]\n        };\n        sessionStorage.setItem(\"item_cart\", JSON.stringify(obj));\n        return obj;\n      }\n\n    case \"UPDATE_AMOUNT_CART\":\n      {\n        if (!!action.payload) {\n          StaticRouter.cartList[action.payload.index] = action.payload;\n          const obj = { ...state,\n            cartList: [...state.cartList]\n          };\n          sessionStorage.setItem(\"item_cart\", JSON.stringify(obj));\n        }\n\n        return state;\n      }\n\n    case \"REMOVE_CART\":\n      {\n        if (!!action.payload) {\n          state.cartList.splice(action.payload.index, 1);\n          const obj = { ...state,\n            cartList: [...state.cartList]\n          };\n          sessionStorage.setItem(\"item_cart\", JSON.stringify(obj));\n        }\n\n        return state;\n      }\n\n    case \"UPDATE_CART\":\n      {\n        if (action.payload && action.payload.length) {\n          state.cartList = [...action.payload];\n          sessionStorage.setItem(\"item_cart\", JSON.stringify({ ...state,\n            cartList: action.payload\n          }));\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer; //https://github.com/sudheerj/javascript-interview-questions","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/reducers/cart.js"],"names":["StaticRouter","initialState","idCustomer","cartList","address","addressOther","deliveryMethod","paymentMethod","deliveryFee","intoMoney","totalPay","status","cartReducer","state","action","type","payload","sessionStorage","setItem","JSON","stringify","product","find","cart","id","amount","push","obj","index","splice","length"],"mappings":"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","sourcesContent":["import { StaticRouter } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  idCustomer: \"5d1b8222-8241-45dd-ac89-70d1793b6f4a\",\r\n  cartList: [],\r\n  address: {},\r\n  addressOther: {},\r\n  deliveryMethod: {},\r\n  paymentMethod: {},\r\n  deliveryFee: 0,\r\n  intoMoney: 0,\r\n  totalPay: 0,\r\n  status: \"draf\",\r\n};\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FEE_OTHER\": {\r\n      if (!!action.payload) {\r\n        state = { ...state, ...action.payload };\r\n        sessionStorage.setItem(\"item_cart\", JSON.stringify(state));\r\n      }\r\n      return state;\r\n    }\r\n    case \"ADD_ADDRESS\": {\r\n      state.address = { ...action.payload };\r\n      return state;\r\n    }\r\n    case \"ADD_ADDRESS_OTHER\": {\r\n      state.addressOther = { ...action.payload };\r\n      return state;\r\n    }\r\n    case \"ADD_DELIVERY_METHOD\": {\r\n      state.deliveryMethod = { ...action.payload };\r\n      return state;\r\n    }\r\n    case \"ADD_PAYMENT_METHOD\": {\r\n      state.paymentMethod = { ...action.payload };\r\n      return state;\r\n    }\r\n    case \"ADD_CART\": {\r\n      let product = state.cartList.find((cart) => {\r\n        return cart.id === action.payload.id;\r\n      });\r\n\r\n      if (!!product) {\r\n        product.amount += 1;\r\n      } else {\r\n        state.cartList.push({ ...action.payload, amount: 1 });\r\n      }\r\n\r\n        const obj = { ...state, cartList: [...state.cartList] };\r\n        sessionStorage.setItem(\"item_cart\", JSON.stringify(obj));\r\n\r\n      return obj;\r\n    }\r\n    case \"UPDATE_AMOUNT_CART\": {\r\n      if (!!action.payload) {\r\n        StaticRouter.cartList[action.payload.index] = action.payload;\r\n        const obj = { ...state, cartList: [...state.cartList] };\r\n        sessionStorage.setItem(\"item_cart\", JSON.stringify(obj));\r\n      }\r\n      return state;\r\n    }\r\n    case \"REMOVE_CART\": {\r\n      if (!!action.payload) {\r\n      state.cartList.splice(action.payload.index, 1);\r\n      const obj = { ...state, cartList: [...state.cartList] };\r\n      sessionStorage.setItem(\"item_cart\", JSON.stringify(obj));\r\n      }\r\n      return state;\r\n    }\r\n\r\n    case \"UPDATE_CART\": {\r\n      if (action.payload && action.payload.length) {\r\n        state.cartList = [...action.payload];\r\n        sessionStorage.setItem(\r\n          \"item_cart\",\r\n          JSON.stringify({ ...state, cartList: action.payload })\r\n        );\r\n      }\r\n      return state;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n\r\n//https://github.com/sudheerj/javascript-interview-questions\r\n"]},"metadata":{},"sourceType":"module"}