{"ast":null,"code":"export const calculateDiscount = (price, discount) => {\n  return price * ((100 - discount) / 100);\n};\nexport const formatCurrency = value => {\n  return parseInt(value).toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  });\n};\nexport const calculateTotal = cartList => {\n  let total = 0;\n  cartList.forEach(cart => {\n    total += calculateDiscount(cart.price, cart.discount) * parseInt(cart.amount);\n  });\n  return total;\n};\nexport const calculateIntoMoney = cartList => {\n  return cartList && cartList.map(item => {\n    const hasDiscount = item.discount;\n    const total = (hasDiscount ? calculateDiscount(item.price, item.discount) : parseFloat(item.price)) * parseInt(item.amount);\n    item.price = parseFloat(item.price);\n    return { ...item,\n      intoMoney: total\n    };\n  });\n};\nexport const calculateAmount = cartList => {\n  let totalAmount = 0;\n  cartList && cartList.forEach(cart => {\n    totalAmount += parseInt(cart.amount);\n  });\n  return totalAmount;\n};","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/util/util.js"],"names":["calculateDiscount","price","discount","formatCurrency","value","parseInt","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","calculateTotal","cartList","total","forEach","cart","amount","calculateIntoMoney","map","item","hasDiscount","parseFloat","intoMoney","calculateAmount","totalAmount"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACpD,SAAOD,KAAK,IAAI,CAAC,MAAMC,QAAP,IAAmB,GAAvB,CAAZ;AACD,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACvC,SAAOC,QAAQ,CAACD,KAAD,CAAR,CAAgBE,cAAhB,CAA+BC,SAA/B,EAA0C;AAC/CC,IAAAA,qBAAqB,EAAE,CADwB;AAE/CC,IAAAA,qBAAqB,EAAE;AAFwB,GAA1C,CAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AAC1C,MAAIC,KAAK,GAAG,CAAZ;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,IAAD,IAAU;AACzBF,IAAAA,KAAK,IACHZ,iBAAiB,CAACc,IAAI,CAACb,KAAN,EAAaa,IAAI,CAACZ,QAAlB,CAAjB,GAA+CG,QAAQ,CAACS,IAAI,CAACC,MAAN,CADzD;AAED,GAHD;AAIA,SAAOH,KAAP;AACD,CAPM;AASP,OAAO,MAAMI,kBAAkB,GAAIL,QAAD,IAAc;AAC9C,SACEA,QAAQ,IACRA,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;AACrB,UAAMC,WAAW,GAAGD,IAAI,CAAChB,QAAzB;AACA,UAAMU,KAAK,GACT,CAACO,WAAW,GACRnB,iBAAiB,CAACkB,IAAI,CAACjB,KAAN,EAAaiB,IAAI,CAAChB,QAAlB,CADT,GAERkB,UAAU,CAACF,IAAI,CAACjB,KAAN,CAFd,IAE8BI,QAAQ,CAACa,IAAI,CAACH,MAAN,CAHxC;AAIAG,IAAAA,IAAI,CAACjB,KAAL,GAAamB,UAAU,CAACF,IAAI,CAACjB,KAAN,CAAvB;AACA,WAAO,EAAE,GAAGiB,IAAL;AAAWG,MAAAA,SAAS,EAAET;AAAtB,KAAP;AACD,GARD,CAFF;AAYD,CAbM;AAcP,OAAO,MAAMU,eAAe,GAAIX,QAAD,IAAc;AAC3C,MAAIY,WAAW,GAAG,CAAlB;AACAZ,EAAAA,QAAQ,IAAIA,QAAQ,CAACE,OAAT,CAAkBC,IAAD,IAAU;AACnCS,IAAAA,WAAW,IAAIlB,QAAQ,CAACS,IAAI,CAACC,MAAN,CAAvB;AACD,GAFS,CAAZ;AAGA,SAAOQ,WAAP;AACD,CANM","sourcesContent":["export const calculateDiscount = (price, discount) => {\r\n  return price * ((100 - discount) / 100);\r\n};\r\n\r\nexport const formatCurrency = (value) => {\r\n  return parseInt(value).toLocaleString(undefined, {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n};\r\n\r\nexport const calculateTotal = (cartList) => {\r\n  let total = 0;\r\n  cartList.forEach((cart) => {\r\n    total +=\r\n      calculateDiscount(cart.price, cart.discount) * parseInt(cart.amount);\r\n  });\r\n  return total;\r\n};\r\n\r\nexport const calculateIntoMoney = (cartList) => {\r\n  return (\r\n    cartList &&\r\n    cartList.map((item) => {\r\n      const hasDiscount = item.discount;\r\n      const total =\r\n        (hasDiscount\r\n          ? calculateDiscount(item.price, item.discount)\r\n          : parseFloat(item.price)) * parseInt(item.amount);\r\n      item.price = parseFloat(item.price);\r\n      return { ...item, intoMoney: total };\r\n    })\r\n  );\r\n};\r\nexport const calculateAmount = (cartList) => {\r\n  let totalAmount = 0;\r\n  cartList && cartList.forEach((cart) => {\r\n      totalAmount += parseInt(cart.amount);\r\n    });\r\n  return totalAmount;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}