{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\SelectedInput\\\\SelectedInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./SelectedInput.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSelectedInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  dataSource: PropTypes.array,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  isShowValidField: PropTypes.bool,\n  optionEventChange: PropTypes.func\n};\nSelectedInput.defaultProps = {\n  placeHolder: \"\",\n  dataSource: [],\n  disabled: false,\n  isShowValidField: true,\n  optionEventChange: null\n};\n\nfunction SelectedInput(props) {\n  _s();\n\n  const {\n    field,\n    form,\n    dataSource,\n    disabled,\n    placeHolder,\n    isShowValidField,\n    optionEventChange\n  } = props;\n  const {\n    errors,\n    touched\n  } = form;\n  const {\n    name,\n    value\n  } = field;\n  const showError = errors[name] && touched[name];\n  const showValidField = touched[name] && !errors[name] && isShowValidField;\n  const [selected, setSelected] = useState(null);\n  useEffect(() => {\n    if (value) setSelected(value);\n  }, [value]);\n\n  const handleEventChange = selectedOption => {\n    const selectedValue = selectedOption ? selectedOption.value : selectedOption;\n    const dataChange = {\n      target: {\n        name: name,\n        value: selectedValue\n      }\n    };\n\n    if (optionEventChange) {\n      optionEventChange(selectedValue);\n    }\n\n    field.onChange(dataChange);\n    setSelected(selectedValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContainerMain\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showValidField ? \"ContainerInput InputValid\" : showError ? \"ContainerInput InputInvalid\" : \"ContainerInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", { ...field,\n          onChange: event => handleEventChange(event.target),\n          disabled: disabled,\n          children: [placeHolder && /*#__PURE__*/_jsxDEV(\"option\", {\n            value: null,\n            selected: !!selected,\n            children: placeHolder\n          }, \"default\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), dataSource.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              selected: item.value === selected,\n              children: item.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"IconValid\",\n          icon: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Error\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"IconInvalid\",\n          icon: \"exclamation-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showError && errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectedInput, \"PTPPEvXEN45kGdaEyuL8EhrK8gY=\");\n\n_c = SelectedInput;\nexport default SelectedInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedInput\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/SelectedInput/SelectedInput.jsx"],"names":["React","useEffect","useState","PropTypes","FontAwesomeIcon","SelectedInput","propTypes","field","object","isRequired","form","dataSource","array","disabled","bool","placeHolder","string","isShowValidField","optionEventChange","func","defaultProps","props","errors","touched","name","value","showError","showValidField","selected","setSelected","handleEventChange","selectedOption","selectedValue","dataChange","target","onChange","event","map","item","index","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./SelectedInput.scss\";\r\nSelectedInput.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  dataSource: PropTypes.array,\r\n  disabled: PropTypes.bool,\r\n  placeHolder: PropTypes.string,\r\n  isShowValidField: PropTypes.bool,\r\n  optionEventChange: PropTypes.func,\r\n};\r\nSelectedInput.defaultProps = {\r\n  placeHolder: \"\",\r\n  dataSource: [],\r\n  disabled: false,\r\n  isShowValidField: true,\r\n  optionEventChange: null,\r\n};\r\nfunction SelectedInput(props) {\r\n  const {\r\n    field,\r\n    form,\r\n    dataSource,\r\n    disabled,\r\n    placeHolder,\r\n    isShowValidField,\r\n    optionEventChange,\r\n  } = props;\r\n  const { errors, touched } = form;\r\n  const { name, value } = field;\r\n\r\n  const showError = errors[name] && touched[name];\r\n  const showValidField = touched[name] && !errors[name] && isShowValidField;\r\n\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (value) setSelected(value);\r\n  }, [value]);\r\n\r\n  const handleEventChange = (selectedOption) => {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n    const dataChange = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    if (optionEventChange) {\r\n      optionEventChange(selectedValue);\r\n    }\r\n    field.onChange(dataChange);\r\n    setSelected(selectedValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ContainerMain\">\r\n      <div\r\n        className={\r\n          showValidField\r\n            ? \"ContainerInput InputValid\"\r\n            : showError\r\n            ? \"ContainerInput InputInvalid\"\r\n            : \"ContainerInput\"\r\n        }\r\n      >\r\n        <div className=\"Input\">\r\n          <select\r\n            {...field}\r\n            onChange={(event) => handleEventChange(event.target)}\r\n            disabled={disabled}\r\n          >\r\n            {placeHolder && (\r\n              <option key=\"default\" value={null} selected={!!selected}>\r\n                {placeHolder}\r\n              </option>\r\n            )}\r\n            {dataSource.map((item, index) => {\r\n              return (\r\n                <option\r\n                  key={index}\r\n                  value={item.value}\r\n                  selected={item.value === selected}\r\n                >\r\n                  {item.label}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <FontAwesomeIcon className=\"IconValid\" icon=\"check\" />\r\n        </div>\r\n        <div className=\"Error\">\r\n          <FontAwesomeIcon className=\"IconInvalid\" icon=\"exclamation-circle\" />\r\n          <span>{showError && errors[name]}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedInput;\r\n"]},"metadata":{},"sourceType":"module"}