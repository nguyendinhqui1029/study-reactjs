{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\Pagination\\\\Pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDoubleLeft, faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPagination.propTypes = {\n  currentPage: PropTypes.number,\n  itemPage: PropTypes.number,\n  totalItem: PropTypes.number,\n  pageChangeClick: PropTypes.func\n};\nPagination.defaultProps = {\n  currentPage: 0,\n  itemPage: 0,\n  totalItem: 0,\n  pageChangeClick: null\n};\n\nfunction getTotalPage(totalPage, limitPage) {\n  return limitPage >= totalPage ? totalPage : limitPage;\n}\n\nfunction Pagination(props) {\n  _s();\n\n  const {\n    currentPage,\n    itemPage,\n    totalItem,\n    pageChangeClick\n  } = props;\n  const totalPage = getTotalPage(Math.floor(totalItem / itemPage), 5);\n  const [current, setCurrent] = useState(currentPage);\n\n  function changePagination(indexPage) {\n    if (pageChangeClick) {\n      setCurrent(indexPage);\n      pageChangeClick({ ...{\n          currentPage: indexPage\n        },\n        itemPage,\n        totalItem\n      });\n    }\n  }\n\n  function nextClick() {\n    const pageSelected = current + 1;\n    setCurrent(pageSelected);\n    pageChangeClick({ ...{\n        currentPage: pageSelected\n      },\n      itemPage,\n      totalItem\n    });\n  }\n\n  function prevClick() {\n    const pageSelected = current - 1;\n    setCurrent(pageSelected);\n    pageChangeClick({ ...{\n        currentPage: pageSelected\n      },\n      itemPage,\n      totalItem\n    });\n  }\n\n  const paginationRender = [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: current <= 1 ? \"NextIndex IsDisable\" : \"NextIndex\",\n    onClick: () => prevClick(),\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAngleDoubleLeft,\n      className: \"IconPagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)];\n\n  for (let ind = 1; ind <= totalPage; ind++) {\n    paginationRender.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      className: ind === current ? \"PageIndex Active\" : \"PageIndex\",\n      onClick: () => changePagination(ind),\n      children: ind\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this));\n  }\n\n  paginationRender.push( /*#__PURE__*/_jsxDEV(\"span\", {\n    className: current >= totalPage ? \"PrevIndex IsDisable\" : \"PrevIndex\",\n    onClick: () => nextClick(),\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAngleDoubleRight,\n      className: \"IconPagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, totalPage + 1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Pagination\",\n    children: paginationRender\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Pagination, \"wSIhX5oPC4XSI2vry8WCMdGwDGc=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/Pagination/Pagination.jsx"],"names":["React","useState","PropTypes","FontAwesomeIcon","faAngleDoubleLeft","faAngleDoubleRight","Pagination","propTypes","currentPage","number","itemPage","totalItem","pageChangeClick","func","defaultProps","getTotalPage","totalPage","limitPage","props","Math","floor","current","setCurrent","changePagination","indexPage","nextClick","pageSelected","prevClick","paginationRender","ind","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Pagination.scss\";\r\nPagination.propTypes = {\r\n  currentPage: PropTypes.number,\r\n  itemPage: PropTypes.number,\r\n  totalItem: PropTypes.number,\r\n  pageChangeClick: PropTypes.func,\r\n};\r\nPagination.defaultProps = {\r\n  currentPage: 0,\r\n  itemPage: 0,\r\n  totalItem: 0,\r\n  pageChangeClick: null,\r\n};\r\n\r\nfunction getTotalPage(totalPage, limitPage) {\r\n  return limitPage >= totalPage ? totalPage : limitPage;\r\n}\r\nfunction Pagination(props) {\r\n  const { currentPage, itemPage, totalItem, pageChangeClick } = props;\r\n  const totalPage = getTotalPage(Math.floor(totalItem / itemPage), 5);\r\n  const [current, setCurrent] = useState(currentPage);\r\n\r\n  function changePagination(indexPage) {\r\n    if (pageChangeClick) {\r\n      setCurrent(indexPage);\r\n      pageChangeClick({ ...{ currentPage: indexPage }, itemPage, totalItem });\r\n    }\r\n  }\r\n\r\n  function nextClick() {\r\n    const pageSelected = current + 1;\r\n    setCurrent(pageSelected);\r\n    pageChangeClick({ ...{ currentPage: pageSelected }, itemPage, totalItem });\r\n  }\r\n\r\n  function prevClick() {\r\n    const pageSelected = current - 1;\r\n    setCurrent(pageSelected);\r\n    pageChangeClick({ ...{ currentPage: pageSelected }, itemPage, totalItem });\r\n  }\r\n\r\n  const paginationRender = [\r\n    <span\r\n      className={current <= 1 ? \"NextIndex IsDisable\" : \"NextIndex\"}\r\n      onClick={() => prevClick()}\r\n      key={0}\r\n    >\r\n      <FontAwesomeIcon icon={faAngleDoubleLeft} className=\"IconPagination\" />\r\n    </span>,\r\n  ];\r\n  for (let ind = 1; ind <= totalPage; ind++) {\r\n    paginationRender.push(\r\n      <span\r\n        key={ind}\r\n        className={ind === current ? \"PageIndex Active\" : \"PageIndex\"}\r\n        onClick={() => changePagination(ind)}\r\n      >\r\n        {ind}\r\n      </span>\r\n    );\r\n  }\r\n  paginationRender.push(\r\n    <span\r\n      className={current >= totalPage ? \"PrevIndex IsDisable\" : \"PrevIndex\"}\r\n      onClick={() => nextClick()}\r\n      key={totalPage + 1}\r\n    >\r\n      <FontAwesomeIcon icon={faAngleDoubleRight} className=\"IconPagination\" />\r\n    </span>\r\n  );\r\n\r\n  return <div className=\"Pagination\">{paginationRender}</div>;\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}