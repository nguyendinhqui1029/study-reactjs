{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\RegisterSection\\\\RegisterSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, Formik } from \"formik\";\nimport { Form } from \"formik\";\nimport { Button } from \"@material-ui/core\";\nimport Header from \"../Header/Header\";\nimport Input from \"./../Input/Input\";\nimport Yup from \"../../validation/CustomValidation\";\nimport SelectedInput from \"./../SelectedInput/SelectedInput\";\nimport \"./RegisterSection.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterSection.propTypes = {};\n\nfunction RegisterSection(props) {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const [districtsByCity, setDistrictsByCity] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n\n  const fetchCities = async () => {\n    try {\n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      };\n      const urlRequest = \"/json/cities.json\";\n      const response = await fetch(urlRequest, header);\n      const responseJson = await response.json();\n      const responseJsonMap = responseJson.map(item => {\n        return {\n          value: item.id,\n          label: item.label\n        };\n      });\n      setCities(responseJsonMap);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  async function fetchDistricts() {\n    try {\n      const districtsList = [];\n\n      if (!districts.length) {\n        const header = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        };\n        const urlRequest = \"/json/districts.json\";\n        const response = await fetch(urlRequest, header);\n        const responseJson = await response.json();\n        const responseJsonMap = responseJson.map(item => {\n          return {\n            districts: item.district.map(item => {\n              return {\n                value: item.alias,\n                label: item.label\n              };\n            }),\n            idCity: item.idCity\n          };\n        });\n        setDistricts(responseJsonMap);\n        responseJsonMap.forEach(district => {\n          district.idCity === selectedCity && districtsList.push(...district.districts);\n        });\n        setDistrictsByCity(Object.assign(districtsList));\n      } else {\n        districts.forEach(district => {\n          district.idCity === selectedCity && districtsList.push(...district.districts);\n        });\n        setDistrictsByCity(Object.assign(districtsList));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchCities();\n  }, []);\n  useEffect(() => {\n    fetchDistricts();\n  }, [selectedCity]);\n  const initialValue = {\n    email: \"\",\n    password: \"\",\n    repassword: \"\",\n    name: \"\",\n    gender: \"\",\n    birthdate: \"\",\n    phone: \"\",\n    address: \"\",\n    city: \"\",\n    district: \"\"\n  };\n  const validations = Yup.object().shape({\n    email: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ email\"),\n    password: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\n    repassword: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\n    name: Yup.string().requiredCustome(\"Vui lòng nhập họ tên\"),\n    gender: Yup.string().requiredCustome(\"Vui lòng chọn giới tính\"),\n    birthdate: Yup.string().requiredCustome(\"Vui lòng chọn ngày sinh\"),\n    phone: Yup.string().requiredCustome(\"Vui lòng nhập số điện thoại\"),\n    address: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ\"),\n    city: Yup.string().requiredCustome(\"Vui lòng chọn tỉnh hoặc thành phố\"),\n    district: Yup.string().requiredCustome(\"Vui lòng chọn quận hoặc huyện\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterSection\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValue,\n      validationSchema: validations,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"RegisterForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header\",\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            title: \"Th\\xF4ng tin t\\xE0i kho\\u1EA3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Nh\\u1EADp email v\\xE0o \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          component: Input,\n          type: \"password\",\n          placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u v\\xE0o \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"repassword\",\n          component: Input,\n          type: \"password\",\n          placeholder: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u v\\xE0o \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header\",\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            title: \"Th\\xF4ng tin c\\xE1 nh\\xE2n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Nh\\u1EADp l\\u1EA1i h\\u1ECD t\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"gender\",\n          component: SelectedInput,\n          dataSource: [{\n            value: \"male\",\n            label: \"Nam\"\n          }, {\n            value: \"female\",\n            label: \"Nữ\"\n          }],\n          placeHolder: \"Vui l\\xF2ng ch\\u1ECDn gi\\u1EDBi t\\xEDnh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"birthdate\",\n          component: Input,\n          type: \"date\",\n          placeholder: \"Vui l\\xF2ng ch\\u1ECDn ng\\xE0y sinh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"phone\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Vui l\\xF2ng nh\\u1EADp s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"address\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Vui l\\xF2ng nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"city\",\n          component: SelectedInput,\n          dataSource: cities,\n          optionEventChange: setSelectedCity,\n          placeHolder: \"Vui l\\xF2ng ch\\u1ECDn th\\xE0nh ph\\u1ED1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"district\",\n          component: SelectedInput,\n          dataSource: districtsByCity,\n          disabled: !districtsByCity.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContainerButton\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Button\",\n            type: \"submit\",\n            children: \"\\u0110\\u0103ng k\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterSection, \"TjUlZ9ufDHiTP3lq0/pzJ0ziP9U=\");\n\n_c = RegisterSection;\nexport default RegisterSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterSection\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/RegisterSection/RegisterSection.jsx"],"names":["React","useState","useEffect","PropTypes","Field","Formik","Form","Button","Header","Input","Yup","SelectedInput","RegisterSection","propTypes","props","cities","setCities","districtsByCity","setDistrictsByCity","districts","setDistricts","selectedCity","setSelectedCity","fetchCities","header","headers","Accept","urlRequest","response","fetch","responseJson","json","responseJsonMap","map","item","value","id","label","error","console","log","fetchDistricts","districtsList","length","district","alias","idCity","forEach","push","Object","assign","initialValue","email","password","repassword","name","gender","birthdate","phone","address","city","validations","object","shape","string","requiredCustome"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Field, Formik } from \"formik\";\r\nimport { Form } from \"formik\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Header from \"../Header/Header\";\r\nimport Input from \"./../Input/Input\";\r\nimport Yup from \"../../validation/CustomValidation\";\r\nimport SelectedInput from \"./../SelectedInput/SelectedInput\";\r\nimport \"./RegisterSection.scss\";\r\nRegisterSection.propTypes = {};\r\nfunction RegisterSection(props) {\r\nconst [cities, setCities] = useState([]);\r\nconst [districtsByCity, setDistrictsByCity] = useState([]);\r\nconst [districts, setDistricts] = useState([]);\r\nconst [selectedCity, setSelectedCity] = useState(null);\r\n\r\nconst fetchCities = async () => {\r\n  try {\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const urlRequest = \"/json/cities.json\";\r\n    const response = await fetch(urlRequest, header);\r\n    const responseJson = await response.json();\r\n    const responseJsonMap = responseJson.map((item) => {\r\n      return {\r\n        value: item.id,\r\n        label: item.label,\r\n      };\r\n    });\r\n    setCities(responseJsonMap);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nasync function fetchDistricts() {\r\n  try {\r\n    const districtsList = [];\r\n    if (!districts.length) {\r\n      const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      };\r\n      const urlRequest = \"/json/districts.json\";\r\n      const response = await fetch(urlRequest, header);\r\n      const responseJson = await response.json();\r\n      const responseJsonMap = responseJson.map((item) => {\r\n        return {\r\n          districts: item.district.map((item) => {\r\n            return { value: item.alias, label: item.label };\r\n          }),\r\n          idCity: item.idCity,\r\n        };\r\n      });\r\n\r\n      setDistricts(responseJsonMap);\r\n      responseJsonMap.forEach((district) => {\r\n        district.idCity === selectedCity &&\r\n          districtsList.push(...district.districts);\r\n      });\r\n\r\n      setDistrictsByCity(Object.assign(districtsList));\r\n    } else {\r\n      districts.forEach((district) => {\r\n        district.idCity === selectedCity &&\r\n          districtsList.push(...district.districts);\r\n      });\r\n      setDistrictsByCity(Object.assign(districtsList));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDistricts();\r\n  }, [selectedCity]);\r\n  \r\n  const initialValue = {\r\n    email: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n    name: \"\",\r\n    gender: \"\",\r\n    birthdate: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    district: \"\",\r\n  };\r\n  const validations = Yup.object().shape({\r\n    email: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ email\"),\r\n    password: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\r\n    repassword: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\r\n    name: Yup.string().requiredCustome(\"Vui lòng nhập họ tên\"),\r\n    gender: Yup.string().requiredCustome(\"Vui lòng chọn giới tính\"),\r\n    birthdate: Yup.string().requiredCustome(\"Vui lòng chọn ngày sinh\"),\r\n    phone: Yup.string().requiredCustome(\"Vui lòng nhập số điện thoại\"),\r\n    address: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ\"),\r\n    city: Yup.string().requiredCustome(\"Vui lòng chọn tỉnh hoặc thành phố\"),\r\n    district: Yup.string().requiredCustome(\"Vui lòng chọn quận hoặc huyện\"),\r\n  });\r\n  return (\r\n    <div className=\"RegisterSection\">\r\n      <Formik initialValues={initialValue} validationSchema={validations}>\r\n        <Form className=\"RegisterForm\">\r\n          <div className=\"Header\">\r\n            <Header title=\"Thông tin tài khoản\" />\r\n          </div>\r\n\r\n          <Field\r\n            name=\"email\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Nhập email vào đây\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            component={Input}\r\n            type=\"password\"\r\n            placeholder=\"Nhập mật khẩu vào đây\"\r\n          />\r\n          <Field\r\n            name=\"repassword\"\r\n            component={Input}\r\n            type=\"password\"\r\n            placeholder=\"Nhập lại mật khẩu vào đây\"\r\n          />\r\n          <div className=\"Header\">\r\n            <Header title=\"Thông tin cá nhân\" />\r\n          </div>\r\n          <Field\r\n            name=\"name\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Nhập lại họ tên\"\r\n          />\r\n          <Field\r\n            name=\"gender\"\r\n            component={SelectedInput}\r\n            dataSource={[\r\n              { value: \"male\", label: \"Nam\" },\r\n              { value: \"female\", label: \"Nữ\" },\r\n            ]}\r\n            placeHolder=\"Vui lòng chọn giới tính\"\r\n          />\r\n          <Field\r\n            name=\"birthdate\"\r\n            component={Input}\r\n            type=\"date\"\r\n            placeholder=\"Vui lòng chọn ngày sinh\"\r\n          />\r\n          <Field\r\n            name=\"phone\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Vui lòng nhập số điện thoại\"\r\n          />\r\n          <Field\r\n            name=\"address\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Vui lòng nhập địa chỉ\"\r\n          />\r\n          <Field\r\n            name=\"city\"\r\n            component={SelectedInput}\r\n            dataSource={cities}\r\n            optionEventChange={setSelectedCity}\r\n            placeHolder=\"Vui lòng chọn thành phố\"\r\n          />\r\n          <Field\r\n            name=\"district\"\r\n            component={SelectedInput}\r\n            dataSource={districtsByCity}\r\n            disabled={!districtsByCity.length}\r\n          />\r\n          <div className=\"ContainerButton\">\r\n            <Button className=\"Button\" type=\"submit\">\r\n              Đăng kí\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterSection;\r\n"]},"metadata":{},"sourceType":"module"}