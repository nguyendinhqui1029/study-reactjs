{"ast":null,"code":"import _objectSpread from\"C:/Users/qnguyen77/Desktop/reactjs/study-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var calculateDiscount=function calculateDiscount(price,discount){return price*((100-discount)/100);};export var formatCurrency=function formatCurrency(value){return parseInt(value).toLocaleString(undefined,{minimumFractionDigits:0,maximumFractionDigits:0});};export var calculateTotal=function calculateTotal(cartList){var total=0;cartList.forEach(function(cart){total+=calculateDiscount(cart.price,cart.discount)*parseInt(cart.amount);});return total;};export var calculateIntoMoney=function calculateIntoMoney(cartList){console.log(\"calculateIntoMoney\",cartList);return cartList.map(function(item){var hasDiscount=item.discount;var total=(hasDiscount?calculateDiscount(item.price,item.discount):parseFloat(item.price))*parseInt(item.amount);item.price=parseFloat(item.price);return _objectSpread(_objectSpread({},item),{},{intoMoney:total});});};export var calculateAmount=function calculateAmount(cartList){var totalAmount=0;cartList.forEach(function(cart){totalAmount+=parseInt(cart.amount);});return totalAmount;};","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/util/util.js"],"names":["calculateDiscount","price","discount","formatCurrency","value","parseInt","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","calculateTotal","cartList","total","forEach","cart","amount","calculateIntoMoney","console","log","map","item","hasDiscount","parseFloat","intoMoney","calculateAmount","totalAmount"],"mappings":"oKAAA,MAAO,IAAMA,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACpD,MAAOD,CAAAA,KAAK,EAAI,CAAC,IAAMC,QAAP,EAAmB,GAAvB,CAAZ,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CACvC,MAAOC,CAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBE,cAAhB,CAA+BC,SAA/B,CAA0C,CAC/CC,qBAAqB,CAAE,CADwB,CAE/CC,qBAAqB,CAAE,CAFwB,CAA1C,CAAP,CAID,CALM,CAOP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAc,CAC1C,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACAD,QAAQ,CAACE,OAAT,CAAiB,SAACC,IAAD,CAAU,CACvBF,KAAK,EACHZ,iBAAiB,CAACc,IAAI,CAACb,KAAN,CAAaa,IAAI,CAACZ,QAAlB,CAAjB,CAA+CG,QAAQ,CAACS,IAAI,CAACC,MAAN,CADzD,CAED,CAHH,EAIA,MAAOH,CAAAA,KAAP,CACD,CAPM,CASP,MAAO,IAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACL,QAAD,CAAc,CAC9CM,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCP,QAAlC,EACA,MACEA,CAAAA,QAAQ,CAACQ,GAAT,CAAa,SAACC,IAAD,CAAU,CACrB,GAAMC,CAAAA,WAAW,CAAGD,IAAI,CAAClB,QAAzB,CACA,GAAMU,CAAAA,KAAK,CACT,CAACS,WAAW,CACRrB,iBAAiB,CAACoB,IAAI,CAACnB,KAAN,CAAamB,IAAI,CAAClB,QAAlB,CADT,CAERoB,UAAU,CAACF,IAAI,CAACnB,KAAN,CAFd,EAE8BI,QAAQ,CAACe,IAAI,CAACL,MAAN,CAHxC,CAIAK,IAAI,CAACnB,KAAL,CAAaqB,UAAU,CAACF,IAAI,CAACnB,KAAN,CAAvB,CACA,sCAAYmB,IAAZ,MAAkBG,SAAS,CAAEX,KAA7B,GACD,CARD,CADF,CAWD,CAbM,CAcP,MAAO,IAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACb,QAAD,CAAc,CAC3C,GAAIc,CAAAA,WAAW,CAAG,CAAlB,CACAd,QAAQ,CAACE,OAAT,CAAiB,SAACC,IAAD,CAAU,CACvBW,WAAW,EAAIpB,QAAQ,CAACS,IAAI,CAACC,MAAN,CAAvB,CACD,CAFH,EAGA,MAAOU,CAAAA,WAAP,CACD,CANM","sourcesContent":["export const calculateDiscount = (price, discount) => {\r\n  return price * ((100 - discount) / 100);\r\n};\r\n\r\nexport const formatCurrency = (value) => {\r\n  return parseInt(value).toLocaleString(undefined, {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n};\r\n\r\nexport const calculateTotal = (cartList) => {\r\n  let total = 0;\r\n  cartList.forEach((cart) => {\r\n      total +=\r\n        calculateDiscount(cart.price, cart.discount) * parseInt(cart.amount);\r\n    });\r\n  return total;\r\n};\r\n\r\nexport const calculateIntoMoney = (cartList) => {\r\n  console.log(\"calculateIntoMoney\", cartList);\r\n  return (\r\n    cartList.map((item) => {\r\n      const hasDiscount = item.discount;\r\n      const total =\r\n        (hasDiscount\r\n          ? calculateDiscount(item.price, item.discount)\r\n          : parseFloat(item.price)) * parseInt(item.amount);\r\n      item.price = parseFloat(item.price);\r\n      return { ...item, intoMoney: total };\r\n    })\r\n  );\r\n};\r\nexport const calculateAmount = (cartList) => {\r\n  let totalAmount = 0;\r\n  cartList.forEach((cart) => {\r\n      totalAmount += parseInt(cart.amount);\r\n    });\r\n  return totalAmount;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}