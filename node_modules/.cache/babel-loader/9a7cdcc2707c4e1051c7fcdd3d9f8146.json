{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\RegisterSection\\\\RegisterSection.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, Formik } from \"formik\";\nimport { Form } from \"formik\";\nimport { Button } from \"@material-ui/core\";\nimport Header from \"../Header/Header\";\nimport Input from \"./../Input/Input\";\nimport Yup from \"../../validation/CustomValidation\";\nimport SelectedInput from \"./../SelectedInput/SelectedInput\";\nimport \"./RegisterSection.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterSection.propTypes = {};\nconst [cities, setCities] = useState([]);\nconst [districtsByCity, setDistrictsByCity] = useState([]);\n\nconst fetchCities = async () => {\n  try {\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n    const urlRequest = \"/json/cities.json\";\n    const response = await fetch(urlRequest, header);\n    const responseJson = await response.json();\n    const responseJsonMap = responseJson.map(item => {\n      return {\n        value: item.id,\n        label: item.label\n      };\n    });\n    setCities(responseJsonMap);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nuseEffect(() => {\n  fetchCities();\n}, []);\nuseEffect(() => {\n  fetchDistricts();\n}, [selectedCity]);\n\nasync function fetchDistricts() {\n  try {\n    const districtsList = [];\n\n    if (!districts.length) {\n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      };\n      const urlRequest = \"/json/districts.json\";\n      const response = await fetch(urlRequest, header);\n      const responseJson = await response.json();\n      const responseJsonMap = responseJson.map(item => {\n        return {\n          districts: item.district.map(item => {\n            return {\n              value: item.alias,\n              label: item.label\n            };\n          }),\n          idCity: item.idCity\n        };\n      });\n      setDistricts(responseJsonMap);\n      responseJsonMap.forEach(district => {\n        district.idCity === selectedCity && districtsList.push(...district.districts);\n      });\n      setDistrictsByCity(Object.assign(districtsList));\n    } else {\n      districts.forEach(district => {\n        district.idCity === selectedCity && districtsList.push(...district.districts);\n      });\n      setDistrictsByCity(Object.assign(districtsList));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction RegisterSection(props) {\n  const initialValue = {\n    email: \"\",\n    password: \"\",\n    repassword: \"\",\n    name: \"\",\n    gender: \"\",\n    birthdate: \"\",\n    phone: \"\",\n    address: \"\",\n    city: \"\",\n    district: \"\"\n  };\n  const validations = Yup.object().shape({\n    email: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ email\"),\n    password: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\n    repassword: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\n    name: Yup.string().requiredCustome(\"Vui lòng nhập họ tên\"),\n    gender: Yup.string().requiredCustome(\"Vui lòng chọn giới tính\"),\n    birthdate: Yup.string().requiredCustome(\"Vui lòng chọn ngày sinh\"),\n    phone: Yup.string().requiredCustome(\"Vui lòng nhập số điện thoại\"),\n    address: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ\"),\n    city: Yup.string().requiredCustome(\"Vui lòng chọn tỉnh hoặc thành phố\"),\n    district: Yup.string().requiredCustome(\"Vui lòng chọn quận hoặc huyện\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegisterSection\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValue,\n      validationSchema: validations,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"RegisterForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header\",\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            title: \"Th\\xF4ng tin t\\xE0i kho\\u1EA3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Nh\\u1EADp email v\\xE0o \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          component: Input,\n          type: \"password\",\n          placeholder: \"Nh\\u1EADp m\\u1EADt kh\\u1EA9u v\\xE0o \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"repassword\",\n          component: Input,\n          type: \"password\",\n          placeholder: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u v\\xE0o \\u0111\\xE2y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Header\",\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            title: \"Th\\xF4ng tin c\\xE1 nh\\xE2n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Nh\\u1EADp l\\u1EA1i h\\u1ECD t\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"gender\",\n          component: SelectedInput,\n          dataSource: [{\n            value: \"male\",\n            label: \"Nam\"\n          }, {\n            value: \"female\",\n            label: \"Nữ\"\n          }],\n          placeHolder: \"Vui l\\xF2ng ch\\u1ECDn gi\\u1EDBi t\\xEDnh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"birthdate\",\n          component: Input,\n          type: \"date\",\n          placeholder: \"Vui l\\xF2ng ch\\u1ECDn ng\\xE0y sinh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"phone\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Vui l\\xF2ng nh\\u1EADp s\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"address\",\n          component: Input,\n          type: \"text\",\n          placeholder: \"Vui l\\xF2ng nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"city\",\n          component: SelectedInput,\n          dataSource: cities,\n          optionEventChange: setSelectedCity,\n          placeHolder: \"Vui l\\xF2ng ch\\u1ECDn th\\xE0nh ph\\u1ED1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"district\",\n          component: SelectedInput,\n          dataSource: districtsByCity,\n          disabled: !districtsByCity.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContainerButton\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Button\",\n            type: \"submit\",\n            children: \"\\u0110\\u0103ng k\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RegisterSection;\nexport default RegisterSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterSection\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/RegisterSection/RegisterSection.jsx"],"names":["React","useState","useEffect","PropTypes","Field","Formik","Form","Button","Header","Input","Yup","SelectedInput","RegisterSection","propTypes","cities","setCities","districtsByCity","setDistrictsByCity","fetchCities","header","headers","Accept","urlRequest","response","fetch","responseJson","json","responseJsonMap","map","item","value","id","label","error","console","log","fetchDistricts","selectedCity","districtsList","districts","length","district","alias","idCity","setDistricts","forEach","push","Object","assign","props","initialValue","email","password","repassword","name","gender","birthdate","phone","address","city","validations","object","shape","string","requiredCustome","setSelectedCity"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Field, Formik } from \"formik\";\r\nimport { Form } from \"formik\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Header from \"../Header/Header\";\r\nimport Input from \"./../Input/Input\";\r\nimport Yup from \"../../validation/CustomValidation\";\r\nimport SelectedInput from \"./../SelectedInput/SelectedInput\";\r\nimport \"./RegisterSection.scss\";\r\nRegisterSection.propTypes = {};\r\nconst [cities, setCities] = useState([]);\r\nconst [districtsByCity, setDistrictsByCity] = useState([]);\r\n\r\nconst fetchCities = async () => {\r\n  try {\r\n    const header = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const urlRequest = \"/json/cities.json\";\r\n    const response = await fetch(urlRequest, header);\r\n    const responseJson = await response.json();\r\n    const responseJsonMap = responseJson.map((item) => {\r\n      return {\r\n        value: item.id,\r\n        label: item.label,\r\n      };\r\n    });\r\n    setCities(responseJsonMap);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchCities();\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  fetchDistricts();\r\n}, [selectedCity]);\r\n\r\nasync function fetchDistricts() {\r\n  try {\r\n    const districtsList = [];\r\n    if (!districts.length) {\r\n      const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      };\r\n      const urlRequest = \"/json/districts.json\";\r\n      const response = await fetch(urlRequest, header);\r\n      const responseJson = await response.json();\r\n      const responseJsonMap = responseJson.map((item) => {\r\n        return {\r\n          districts: item.district.map((item) => {\r\n            return { value: item.alias, label: item.label };\r\n          }),\r\n          idCity: item.idCity,\r\n        };\r\n      });\r\n\r\n      setDistricts(responseJsonMap);\r\n      responseJsonMap.forEach((district) => {\r\n        district.idCity === selectedCity &&\r\n          districtsList.push(...district.districts);\r\n      });\r\n\r\n      setDistrictsByCity(Object.assign(districtsList));\r\n    } else {\r\n      districts.forEach((district) => {\r\n        district.idCity === selectedCity &&\r\n          districtsList.push(...district.districts);\r\n      });\r\n      setDistrictsByCity(Object.assign(districtsList));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction RegisterSection(props) {\r\n  const initialValue = {\r\n    email: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n    name: \"\",\r\n    gender: \"\",\r\n    birthdate: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    district: \"\",\r\n  };\r\n  const validations = Yup.object().shape({\r\n    email: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ email\"),\r\n    password: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\r\n    repassword: Yup.string().requiredCustome(\"Vui lòng nhập mật khẩu\"),\r\n    name: Yup.string().requiredCustome(\"Vui lòng nhập họ tên\"),\r\n    gender: Yup.string().requiredCustome(\"Vui lòng chọn giới tính\"),\r\n    birthdate: Yup.string().requiredCustome(\"Vui lòng chọn ngày sinh\"),\r\n    phone: Yup.string().requiredCustome(\"Vui lòng nhập số điện thoại\"),\r\n    address: Yup.string().requiredCustome(\"Vui lòng nhập địa chỉ\"),\r\n    city: Yup.string().requiredCustome(\"Vui lòng chọn tỉnh hoặc thành phố\"),\r\n    district: Yup.string().requiredCustome(\"Vui lòng chọn quận hoặc huyện\"),\r\n  });\r\n  return (\r\n    <div className=\"RegisterSection\">\r\n      <Formik initialValues={initialValue} validationSchema={validations}>\r\n        <Form className=\"RegisterForm\">\r\n          <div className=\"Header\">\r\n            <Header title=\"Thông tin tài khoản\" />\r\n          </div>\r\n\r\n          <Field\r\n            name=\"email\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Nhập email vào đây\"\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            component={Input}\r\n            type=\"password\"\r\n            placeholder=\"Nhập mật khẩu vào đây\"\r\n          />\r\n          <Field\r\n            name=\"repassword\"\r\n            component={Input}\r\n            type=\"password\"\r\n            placeholder=\"Nhập lại mật khẩu vào đây\"\r\n          />\r\n          <div className=\"Header\">\r\n            <Header title=\"Thông tin cá nhân\" />\r\n          </div>\r\n          <Field\r\n            name=\"name\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Nhập lại họ tên\"\r\n          />\r\n          <Field\r\n            name=\"gender\"\r\n            component={SelectedInput}\r\n            dataSource={[\r\n              { value: \"male\", label: \"Nam\" },\r\n              { value: \"female\", label: \"Nữ\" },\r\n            ]}\r\n            placeHolder=\"Vui lòng chọn giới tính\"\r\n          />\r\n          <Field\r\n            name=\"birthdate\"\r\n            component={Input}\r\n            type=\"date\"\r\n            placeholder=\"Vui lòng chọn ngày sinh\"\r\n          />\r\n          <Field\r\n            name=\"phone\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Vui lòng nhập số điện thoại\"\r\n          />\r\n          <Field\r\n            name=\"address\"\r\n            component={Input}\r\n            type=\"text\"\r\n            placeholder=\"Vui lòng nhập địa chỉ\"\r\n          />\r\n          <Field\r\n            name=\"city\"\r\n            component={SelectedInput}\r\n            dataSource={cities}\r\n            optionEventChange={setSelectedCity}\r\n            placeHolder=\"Vui lòng chọn thành phố\"\r\n          />\r\n          <Field\r\n            name=\"district\"\r\n            component={SelectedInput}\r\n            dataSource={districtsByCity}\r\n            disabled={!districtsByCity.length}\r\n          />\r\n          <div className=\"ContainerButton\">\r\n            <Button className=\"Button\" type=\"submit\">\r\n              Đăng kí\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterSection;\r\n"]},"metadata":{},"sourceType":"module"}