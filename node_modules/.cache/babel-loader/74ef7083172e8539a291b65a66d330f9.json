{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\SelectedInput\\\\SelectedInput.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport './SelectedInput.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSelectedInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  dataSource: PropTypes.array.isRequired\n};\n\nfunction SelectedInput(props) {\n  const {\n    field,\n    form,\n    type,\n    placeholder,\n    disable\n  } = props;\n  const {\n    errors,\n    touched\n  } = form;\n  const {\n    name\n  } = field;\n  const showError = errors[name] && touched[name];\n  const showValidField = touched[name] && !errors[name];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelectedInput\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showValidField ? \"ContainerInput InputValid\" : showError ? \"ContainerInput InputInvalid\" : \"ContainerInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => handleEventChange(event.target.value),\n          children: dataSource.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.value,\n              selected: selectedCity === item.value,\n              children: item.label\n            }, item.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"IconValid\",\n          icon: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Error\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"IconInvalid\",\n          icon: \"exclamation-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: showError && errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SelectedInput;\nexport default SelectedInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedInput\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/SelectedInput/SelectedInput.jsx"],"names":["React","PropTypes","FontAwesomeIcon","SelectedInput","propTypes","field","object","isRequired","form","dataSource","array","props","type","placeholder","disable","errors","touched","name","showError","showValidField","event","handleEventChange","target","value","map","item","selectedCity","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAO,sBAAP;;AACAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADA;AAExBC,EAAAA,IAAI,EAACP,SAAS,CAACK,MAAV,CAAiBC,UAFE;AAIxBE,EAAAA,UAAU,EAACR,SAAS,CAACS,KAAV,CAAgBH;AAJH,CAA1B;;AAOA,SAASJ,aAAT,CAAuBQ,KAAvB,EAA8B;AAC7B,QAAM;AAAEN,IAAAA,KAAF;AAASG,IAAAA,IAAT;AAAeI,IAAAA,IAAf;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA;AAAlC,MAA8CH,KAApD;AACA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBR,IAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWZ,KAAjB;AACA,QAAMa,SAAS,GAAGH,MAAM,CAACE,IAAD,CAAN,IAAgBD,OAAO,CAACC,IAAD,CAAzC;AACA,QAAME,cAAc,GAAGH,OAAO,CAACC,IAAD,CAAP,IAAiB,CAACF,MAAM,CAACE,IAAD,CAA/C;AACC,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AACE,MAAA,SAAS,EACPE,cAAc,GACV,2BADU,GAEVD,SAAS,GACT,6BADS,GAET,gBANR;AAAA,8BASE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAQ,UAAA,QAAQ,EAAGE,KAAD,IAAWC,iBAAiB,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAA9C;AAAA,oBACGd,UAAU,CAACe,GAAX,CAAgBC,IAAD,IAAU;AACxB,gCACE;AAEE,cAAA,KAAK,EAAEA,IAAI,CAACF,KAFd;AAGE,cAAA,QAAQ,EAAEG,YAAY,KAAKD,IAAI,CAACF,KAHlC;AAAA,wBAKGE,IAAI,CAACE;AALR,eACOF,IAAI,CAACF,KADZ;AAAA;AAAA;AAAA;AAAA,oBADF;AASD,WAVA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,WAA3B;AAAuC,UAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAyBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,aAA3B;AAAyC,UAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOL,SAAS,IAAIH,MAAM,CAACE,IAAD;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;KAxCQd,a;AA0CT,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport './SelectedInput.scss';\r\nSelectedInput.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form:PropTypes.object.isRequired,\r\n\r\n  dataSource:PropTypes.array.isRequired,\r\n};\r\n\r\nfunction SelectedInput(props) {\r\n const { field, form, type, placeholder, disable } = props;\r\n const { errors, touched } = form;\r\n const { name } = field;\r\n const showError = errors[name] && touched[name];\r\n const showValidField = touched[name] && !errors[name];\r\n  return (\r\n    <div className=\"SelectedInput\">\r\n      <div\r\n        className={\r\n          showValidField\r\n            ? \"ContainerInput InputValid\"\r\n            : showError\r\n            ? \"ContainerInput InputInvalid\"\r\n            : \"ContainerInput\"\r\n        }\r\n      >\r\n        <div className=\"Input\">\r\n          <select onChange={(event) => handleEventChange(event.target.value)}>\r\n            {dataSource.map((item) => {\r\n              return (\r\n                <option\r\n                  key={item.value}\r\n                  value={item.value}\r\n                  selected={selectedCity === item.value}\r\n                >\r\n                  {item.label}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <FontAwesomeIcon className=\"IconValid\" icon=\"check\" />\r\n        </div>\r\n        <div className=\"Error\">\r\n          <FontAwesomeIcon className=\"IconInvalid\" icon=\"exclamation-circle\" />\r\n          <span>{showError && errors[name]}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedInput;"]},"metadata":{},"sourceType":"module"}