{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnguyen77\\\\Desktop\\\\reactjs\\\\study-react\\\\src\\\\component\\\\DeliveryAddress\\\\DeliveryAddress.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"../../component/Input/Input\";\nimport SelectedInput from \"../../component/SelectedInput/SelectedInput\";\nimport Textarea from \"../../component/Textarea/Textarea\";\nimport { Formik, Form, FastField, Field, useFormikContext } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { addAddress, addAddressOther } from \"../../actions/cart\";\nimport Yup from \"../../validation/CustomValidation\";\nimport \"./DeliveryAddress.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDeliveryAddress.propTypes = {\n  isSubmitForm: PropTypes.bool\n};\nDeliveryAddress.defaultProps = {\n  isSubmitForm: false\n};\n\nfunction DeliveryAddress(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    isSubmitForm\n  } = props;\n  const [cities, setCities] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [districtsByCity, setDistrictsByCity] = useState([]);\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\n  const dispatch = useDispatch();\n  const initialValues = {\n    address: {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      city: \"\",\n      district: \"\",\n      description: \"\"\n    },\n    otherAddress: {\n      nameOther: \"\",\n      emailOther: \"\",\n      addressOther: \"\",\n      cityOther: \"\",\n      districtOther: \"\",\n      descriptionOther: \"\"\n    }\n  };\n\n  const fetchCities = async () => {\n    try {\n      const header = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      };\n      const urlRequest = \"/json/cities.json\";\n      const response = await fetch(urlRequest, header);\n      const responseJson = await response.json();\n      const responseJsonMap = responseJson.map(item => {\n        return {\n          value: item.id,\n          label: item.label\n        };\n      });\n      setCities(responseJsonMap);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCities();\n  }, []);\n  useEffect(() => {\n    fetchDistricts();\n  }, [selectedCity, selectedCitySubAddress]);\n\n  async function fetchDistricts() {\n    try {\n      const districtsList = [];\n      const districtsSubAddress = [];\n\n      if (!districts.length) {\n        const header = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        };\n        const urlRequest = \"/json/districts.json\";\n        const response = await fetch(urlRequest, header);\n        const responseJson = await response.json();\n        const responseJsonMap = responseJson.map(item => {\n          return {\n            districts: item.district.map(item => {\n              return {\n                value: item.alias,\n                label: item.label\n              };\n            }),\n            idCity: item.idCity\n          };\n        });\n        setDistricts(responseJsonMap);\n        responseJsonMap.forEach(district => {\n          district.idCity === selectedCity && districtsList.push(...district.districts);\n          district.idCity === selectedCitySubAddress && districtsSubAddress.push(...district.districts);\n        });\n        setDistrictsByCity(Object.assign(districtsList));\n        setDistrictsByCitySubAddress(Object.assign(districtsSubAddress));\n      } else {\n        districts.forEach(district => {\n          district.idCity === selectedCity && districtsList.push(...district.districts);\n          district.idCity === selectedCitySubAddress && districtsSubAddress.push(...district.districts);\n        });\n        console.log(districtsList);\n        setDistrictsByCity(Object.assign(districtsList));\n        setDistrictsByCitySubAddress(Object.assign(districtsSubAddress));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function changeOtherAddress(event) {\n    setShowOtherAddress(event.target.checked);\n  }\n\n  const AutoSubmit = () => {\n    _s();\n\n    const {\n      values,\n      submitForm\n    } = useFormikContext();\n    useEffect(() => {\n      if (isSubmitForm) {\n        submitForm();\n      }\n    }, [isSubmitForm]);\n    return null;\n  };\n\n  _s(AutoSubmit, \"eluiyIPyaFuYIzYXLcNy1h5e6gs=\", false, function () {\n    return [useFormikContext];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeliveryAddress\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HeaderContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"1. \\u0110\\u1ECAA CH\\u1EC8 THANH TO\\xC1N V\\xC0 GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN THANH TO\\xC1N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContainerLink\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/account/register\",\n          className: \"RegisterLink\",\n          children: \"\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n mua h\\xE0ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/account/login\",\n          className: \"LoginLink\",\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MainInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Mua h\\xE0ng kh\\xF4ng c\\u1EA7n t\\xE0i kho\\u1EA3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues.address,\n          onSubmit: value => {\n            dispatch(addAddress(value));\n          },\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(Form, {\n              className: \"FormInfo\",\n              children: [/*#__PURE__*/_jsxDEV(FastField, {\n                name: \"name\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"email\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"address\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"city\",\n                component: SelectedInput,\n                dataSource: cities,\n                optionEventChange: setSelectedCity,\n                placeHolder: \"Vui l\\xF2ng ch\\u1ECDn th\\xE0nh ph\\u1ED1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"district\",\n                component: SelectedInput,\n                dataSource: districtsByCity,\n                disabled: !districtsByCity.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"description\",\n                component: Textarea,\n                placeholder: \"Ghi ch\\xFA \\u0111\\u01A1n h\\xE0ng\",\n                rows: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AutoSubmit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"HeaderContent\",\n        children: \"TH\\xD4NG TIN GIAO H\\xC0NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SubInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"otherAddress\",\n            placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\",\n            onChange: event => changeOtherAddress(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Giao h\\xE0ng \\u0111\\u1ECBa ch\\u1EC9 kh\\xE1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues.otherAddress,\n          onSubmit: value => {\n            if (!isShowOtherAddress) {\n              dispatch(addAddressOther(initialValues.otherAddress));\n            } else {\n              dispatch(addAddressOther(value));\n            }\n          },\n          render: () => {\n            return /*#__PURE__*/_jsxDEV(Form, {\n              className: isShowOtherAddress ? \"FormInfo\" : \"SubForm\",\n              children: [/*#__PURE__*/_jsxDEV(FastField, {\n                name: \"nameOther\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"H\\u1ECD v\\xE0 T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"emailOther\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                name: \"addressOther\",\n                component: Input,\n                type: \"text\",\n                placeholder: \"\\u0110\\u1ECBa ch\\u1EC9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"cityOther\",\n                component: SelectedInput,\n                dataSource: cities,\n                placeHolder: \"Vui l\\xF2ng ch\\u1ECDn th\\xE0nh ph\\u1ED1\",\n                optionEventChange: setSelectedCitySubAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"districtOther\",\n                component: SelectedInput,\n                dataSource: districtsByCitySubAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AutoSubmit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DeliveryAddress, \"ioJTz0DavaNkIEiZOWOrhmY/R1E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DeliveryAddress;\nexport default DeliveryAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryAddress\");","map":{"version":3,"sources":["C:/Users/qnguyen77/Desktop/reactjs/study-react/src/component/DeliveryAddress/DeliveryAddress.jsx"],"names":["React","useEffect","useState","PropTypes","Link","Input","SelectedInput","Textarea","Formik","Form","FastField","Field","useFormikContext","useDispatch","addAddress","addAddressOther","Yup","DeliveryAddress","propTypes","isSubmitForm","bool","defaultProps","props","cities","setCities","districts","setDistricts","districtsByCity","setDistrictsByCity","districtsByCitySubAddress","setDistrictsByCitySubAddress","selectedCity","setSelectedCity","selectedCitySubAddress","setSelectedCitySubAddress","isShowOtherAddress","setShowOtherAddress","dispatch","initialValues","address","name","email","city","district","description","otherAddress","nameOther","emailOther","addressOther","cityOther","districtOther","descriptionOther","fetchCities","header","headers","Accept","urlRequest","response","fetch","responseJson","json","responseJsonMap","map","item","value","id","label","error","console","log","fetchDistricts","districtsList","districtsSubAddress","length","alias","idCity","forEach","push","Object","assign","changeOtherAddress","event","target","checked","AutoSubmit","values","submitForm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../../component/Input/Input\";\r\nimport SelectedInput from \"../../component/SelectedInput/SelectedInput\";\r\nimport Textarea from \"../../component/Textarea/Textarea\";\r\nimport { Formik, Form, FastField, Field, useFormikContext } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addAddress, addAddressOther } from \"../../actions/cart\";\r\nimport Yup from \"../../validation/CustomValidation\";\r\nimport \"./DeliveryAddress.scss\";\r\nDeliveryAddress.propTypes = {\r\n  isSubmitForm: PropTypes.bool,\r\n};\r\nDeliveryAddress.defaultProps = {\r\n  isSubmitForm: false,\r\n};\r\n\r\nfunction DeliveryAddress(props) {\r\n  const { isSubmitForm } = props;\r\n  const [cities, setCities] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [districtsByCity, setDistrictsByCity] = useState([]);\r\n  const [districtsByCitySubAddress, setDistrictsByCitySubAddress] = useState(\r\n    []\r\n  );\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedCitySubAddress, setSelectedCitySubAddress] = useState(null);\r\n  const [isShowOtherAddress, setShowOtherAddress] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    address: {\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      district: \"\",\r\n      description: \"\",\r\n    },\r\n    otherAddress: {\r\n      nameOther: \"\",\r\n      emailOther: \"\",\r\n      addressOther: \"\",\r\n      cityOther: \"\",\r\n      districtOther: \"\",\r\n      descriptionOther: \"\",\r\n    },\r\n  };\r\n\r\n  const fetchCities = async () => {\r\n    try {\r\n      const header = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      };\r\n      const urlRequest = \"/json/cities.json\";\r\n      const response = await fetch(urlRequest, header);\r\n      const responseJson = await response.json();\r\n      const responseJsonMap = responseJson.map((item) => {\r\n        return {\r\n          value: item.id,\r\n          label: item.label,\r\n        };\r\n      });\r\n      setCities(responseJsonMap);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDistricts();\r\n  }, [selectedCity, selectedCitySubAddress]);\r\n\r\n  async function fetchDistricts() {\r\n    try {\r\n      const districtsList = [];\r\n      const districtsSubAddress = [];\r\n      if (!districts.length) {\r\n        const header = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        };\r\n        const urlRequest = \"/json/districts.json\";\r\n        const response = await fetch(urlRequest, header);\r\n        const responseJson = await response.json();\r\n        const responseJsonMap = responseJson.map((item) => {\r\n          return {\r\n            districts: item.district.map((item) => {\r\n              return { value: item.alias, label: item.label };\r\n            }),\r\n            idCity: item.idCity,\r\n          };\r\n        });\r\n\r\n        setDistricts(responseJsonMap);\r\n        responseJsonMap.forEach((district) => {\r\n          district.idCity === selectedCity &&\r\n            districtsList.push(...district.districts);\r\n          district.idCity === selectedCitySubAddress &&\r\n            districtsSubAddress.push(...district.districts);\r\n        });\r\n\r\n        setDistrictsByCity(Object.assign(districtsList));\r\n        setDistrictsByCitySubAddress(Object.assign(districtsSubAddress));\r\n      } else {\r\n        districts.forEach((district) => {\r\n          district.idCity === selectedCity &&\r\n            districtsList.push(...district.districts);\r\n          district.idCity === selectedCitySubAddress &&\r\n            districtsSubAddress.push(...district.districts);\r\n        });\r\n        console.log(districtsList);\r\n        setDistrictsByCity(Object.assign(districtsList));\r\n        setDistrictsByCitySubAddress(Object.assign(districtsSubAddress));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function changeOtherAddress(event) {\r\n    setShowOtherAddress(event.target.checked);\r\n  }\r\n\r\n  const AutoSubmit = () => {\r\n    const { values, submitForm } = useFormikContext();\r\n    useEffect(() => {\r\n      if (isSubmitForm) {\r\n        submitForm();\r\n      }\r\n    }, [isSubmitForm]);\r\n    return null;\r\n  };\r\n  return (\r\n    <div className=\"DeliveryAddress\">\r\n      <div className=\"HeaderContainer\">\r\n        <h3 className=\"HeaderContent\">1. ĐỊA CHỈ THANH TOÁN VÀ GIAO HÀNG</h3>\r\n      </div>\r\n      <div className=\"ContentContainer\">\r\n        <h3 className=\"HeaderContent\">THÔNG TIN THANH TOÁN</h3>\r\n        <div className=\"ContainerLink\">\r\n          <Link to=\"/account/register\" className=\"RegisterLink\">\r\n            Đăng ký tài khoản mua hàng\r\n          </Link>\r\n          <span>|</span>\r\n          <Link to=\"/account/login\" className=\"LoginLink\">\r\n            Đăng nhập\r\n          </Link>\r\n        </div>\r\n        <div className=\"MainInfo\">\r\n          <h5>Mua hàng không cần tài khoản</h5>\r\n          <Formik\r\n            initialValues={initialValues.address}\r\n            onSubmit={(value) => {\r\n              dispatch(addAddress(value));\r\n            }}\r\n            render={() => {\r\n              return (\r\n                <Form className=\"FormInfo\">\r\n                  <FastField\r\n                    name=\"name\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Họ và Tên\"\r\n                  />\r\n                  <FastField\r\n                    name=\"email\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FastField\r\n                    name=\"address\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Địa chỉ\"\r\n                  />\r\n                  <Field\r\n                    name=\"city\"\r\n                    component={SelectedInput}\r\n                    dataSource={cities}\r\n                    optionEventChange={setSelectedCity}\r\n                    placeHolder=\"Vui lòng chọn thành phố\"\r\n                  />\r\n                  <Field\r\n                    name=\"district\"\r\n                    component={SelectedInput}\r\n                    dataSource={districtsByCity}\r\n                    disabled={!districtsByCity.length}\r\n                  />\r\n                  <FastField\r\n                    name=\"description\"\r\n                    component={Textarea}\r\n                    placeholder=\"Ghi chú đơn hàng\"\r\n                    rows={5}\r\n                  />\r\n                  <AutoSubmit />\r\n                </Form>\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        <h3 className=\"HeaderContent\">THÔNG TIN GIAO HÀNG</h3>\r\n        <div className=\"SubInfo\">\r\n          <span>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"otherAddress\"\r\n              placeholder=\"Họ và Tên\"\r\n              onChange={(event) => changeOtherAddress(event)}\r\n            />\r\n            <span>Giao hàng địa chỉ khác</span>\r\n          </span>\r\n\r\n          <Formik\r\n            initialValues={initialValues.otherAddress}\r\n            onSubmit={(value) => {\r\n              if (!isShowOtherAddress) {\r\n                dispatch(addAddressOther(initialValues.otherAddress));\r\n              } else {\r\n                dispatch(addAddressOther(value));\r\n              }\r\n            }}\r\n            render={() => {\r\n              return (\r\n                <Form className={isShowOtherAddress ? \"FormInfo\" : \"SubForm\"}>\r\n                  <FastField\r\n                    name=\"nameOther\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Họ và Tên\"\r\n                  />\r\n                  <FastField\r\n                    name=\"emailOther\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FastField\r\n                    name=\"addressOther\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder=\"Địa chỉ\"\r\n                  />\r\n                  <Field\r\n                    name=\"cityOther\"\r\n                    component={SelectedInput}\r\n                    dataSource={cities}\r\n                    placeHolder=\"Vui lòng chọn thành phố\"\r\n                    optionEventChange={setSelectedCitySubAddress}\r\n                  />\r\n                  <Field\r\n                    name=\"districtOther\"\r\n                    component={SelectedInput}\r\n                    dataSource={districtsByCitySubAddress}\r\n                  />\r\n                  <AutoSubmit />\r\n                </Form>\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryAddress;\r\n"]},"metadata":{},"sourceType":"module"}